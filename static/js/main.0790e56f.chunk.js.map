{"version":3,"sources":["components/context.js","components/controls.js","components/color-converter.js","components/lights.js","components/light-renderer.js","components/model-renderer.js","components/object-list.js","icons/translate.svg","components/range-input.js","icons/rotate.svg","icons/scale.svg","components/number-input.js","components/color-selector.js","components/light-window.js","icons/eye.svg","components/shade-selector.js","icons/eye-crossed.svg","components/visibility-toggle.js","components/model-window.js","components/toggle.js","components/scene-window.js","components/nav-file.js","components/nav-edit.js","components/nav-add.js","Documents/UserManual.pdf","components/nav-help.js","components/toolbar.js","components/viewcube.js","components/group.js","components/grid.js","components/fog.js","components/hotkeys.js","App.js","index.js"],"names":["useTarget","create","set","targetMesh","setTargetMesh","hoveredMesh","setHoveredMesh","useProperty","currentColor","setCurrentColor","currentShade","setCurrentShade","currentIntensity","setCurrentIntensity","currentTransformMode","setCurrentTransformMode","currentTransform","translate","rotate","scale","setCurrentTransform","state","useScene","isGridVisible","setGrid","isShadowsVisible","setShadows","isFogVisible","setFog","isMeshVisible","setVisibility","isDragging","setIsDragging","useModel","modelData","modelDataPrev","isModelWindowOpen","setIsModelWindowOpen","replaceModelData","data","deleteModelData","delModel","newList","forEach","entry","i","uuid","splice","setModelData","modelDataElement","useLight","lightData","lightDataPrev","setLightData","lightDataElement","lightWindowInfo","lightType","isWindowOpen","setLightWindowType","windowInfoLightType","setLightWindowToggle","windowInfoIsWindowOpen","replaceLightData","deleteLightData","delIndex","useGroup","groupList","undoingMode","statesList","redoList","justPopped","setUndoingMode","setStatesList","push","popStatesList","pop","setRedoList","popRedoList","resetUndoLists","delGroupList","delGroup","index","indexOf","resetGroupList","setGroupList","groupListElement","Set","Controls","transformRef","useRef","serialize","serialized","models","lights","thing","children","console","log","Math","random","position","type","color","material","rotation","toVector3","r","g","b","geometryType","geometry","name","JSON","stringify","useEffect","current","controls","setMode","mode","handleKeyDown","event","key","attach","detach","visible","isFinite","callback","value","addEventListener","document","removeEventListener","TransformControls","ref","size","object","OrbitControls","makeDefault","dampingFactor","convertColor","hex","result","exec","parseInt","hexToRgb","rgb","componentToHex","c","toString","length","floor","rgbToHex","LightMesh","props","handleLightClick","onClick","handleWindowClose","onClose","lightIndex","filter","mesh","intensity","onPointerMissed","AmbientLight","wireframe","DirectionalLight","lightRef","useHelper","DirectionalLightHelper","castShadow","PointLight","PointLightHelper","LightRenderer","ModelRenderer","meshRef","meshIndex","meshElement","x","y","z","ObjectList","total","objList","className","map","Button","active","onPointerOver","onPointerOut","placeholder","_path","Range","min","max","defaultValue","onChange","target","handleRangeChange","steps","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTranslate","_ref","svgRef","title","titleId","xmlns","width","height","fill","viewBox","id","fillRule","d","_path2","ForwardRef","SvgRotate","SvgScale","Number","icons","handleNumberChange","parseFloat","step","tabIndex","toFixed","ColorSelect","handleInputChange","onInput","style","border","borderRadius","outline","LightWindow","windowType","ShadeSelect","ButtonGroup","flatShading","needsUpdate","SvgEye","clipRule","SvgEyeCrossed","Visibility","ModelWindow","Toggle","defaultChecked","SceneWindow","checked","NavFile","context","NavDropdown","Item","href","deserialize","accept","filename","text","pom","createElement","setAttribute","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","download","json","e","reader","FileReader","readAsText","files","load","Divider","parse","NavEdit","display","justifyContent","margin","NavAdd","generateNewShape","generateNewLight","innerHTML","newAmbient","newDirectional","newPoint","NavHelp","Pdf","Toolbar","vertical","Viewcube","useThree","gl","camera","matrix","Matrix4","virtualScene","useMemo","Scene","virtualCam","viewcubeRef","useState","hover","setViewcubeColor","useFrame","copy","invert","quaternion","setFromRotationMatrix","autoClear","clearDepth","render","createPortal","OrthographicCamera","raycast","useCamera","onPointerMove","faceIndex","setCameraPosition","Array","_","attachArray","args","Group","groupRef","group","KeyboardEvent","Grid","PI","receiveShadow","transparent","opacity","Fog","HotKeys","groupListPrev","ctrlKey","beforeLength","totalLightsMinusOne","App","Navbar","Brand","Nav","split","raycaster","intersections","shadows","multisampling","blur","selection","undefined","visibleEdgeColor","edgeStrength","initialSize","minSize","maxSize","ReactDOM","Fragment","getElementById"],"mappings":"8cAGaA,EAAYC,KAAO,SAACC,GAAD,MAAU,CACxCC,WAAY,KACZC,cAAe,SAACD,GAAD,OAAgBD,EAAI,CAAEC,gBAErCE,YAAa,KACbC,eAAgB,SAACD,GAAD,OAAiBH,EAAI,CAAEG,qBAI5BE,EAAcN,KAAO,SAACC,GAAD,MAAU,CAC1CM,aAAc,UACdC,gBAAiB,SAACD,GAAD,OAAkBN,EAAI,CAAEM,kBAEzCE,aAAc,SACdC,gBAAiB,SAACD,GAAD,OAAkBR,EAAI,CAAEQ,kBAEzCE,iBAAkB,EAClBC,oBAAqB,SAACD,GAAD,OAAsBV,EAAI,CAAEU,sBAEjDE,qBAAsB,YACtBC,wBAAyB,SAACD,GAAD,OACvBZ,EAAI,CAAEY,0BAERE,iBAAkB,CAChBC,UAAW,GACXC,OAAQ,GACRC,MAAO,IAETC,oBAAqB,SAACJ,GAAD,OACnBd,GAAI,SAACmB,GAAD,mBAAC,eACAA,EAAML,kBADP,IAEFA,6BAKOM,EAAWrB,KAAO,SAACC,GAAD,MAAU,CACvCqB,eAAe,EACfC,QAAS,SAACD,GAAD,OAAmBrB,EAAI,CAAEqB,mBAElCE,kBAAkB,EAClBC,WAAY,SAACD,GAAD,OAAsBvB,EAAI,CAAEuB,sBAExCE,cAAc,EACdC,OAAQ,SAACD,GAAD,OAAkBzB,EAAI,CAAEyB,kBAEhCE,eAAe,EACfC,cAAe,SAACD,GAAD,OAAmB3B,EAAI,CAAE2B,mBAExCE,YAAY,EACZC,cAAe,SAACD,GAAD,OAAgB7B,EAAI,CAAE6B,oBAI1BE,EAAWhC,KAAO,SAACC,GAAD,MAAU,CACvCgC,UAAW,GACXC,cAAe,GAEfC,mBAAmB,EACnBC,qBAAsB,SAACD,GAAD,OAAuBlC,EAAI,CAAEkC,uBAEnDE,iBAAkB,SAACC,GACjBrC,GAAI,SAACmB,GACHA,EAAMa,UAAYK,MAQtBC,gBAAiB,SAACC,GAAD,OACfvC,GAAI,SAACmB,GACH,IAAMqB,EAAUrB,EAAMa,UACtBb,EAAMa,UAAUS,SAAQ,SAACC,EAAOC,GAC1BD,EAAME,OAASL,EAASK,MAC1BJ,EAAQK,OAAOF,EAAG,MAGtBxB,EAAMa,UAAYQ,MAGtBM,aAAc,SAACC,GAAD,OACZ/C,GAAI,SAACmB,GAAD,MAAY,CACda,UAAU,CAAEe,GAAH,mBAAwB5B,EAAMa,qBAKhCgB,EAAWjD,KAAO,SAACC,GAAD,MAAU,CACvCiD,UAAW,GACXC,cAAe,GACfC,aAAc,SAACC,GAAD,OACZpD,GAAI,SAACmB,GAAD,MAAY,CACd8B,UAAU,CAAEG,GAAH,mBAAwBjC,EAAM8B,iBAG3CI,gBAAiB,CACfC,UAAW,KACXC,cAAc,GAEhBC,mBAAoB,SAACC,GAAD,OAClBzD,GAAI,SAACmB,GACHA,EAAMkC,gBAAgBC,UAAYG,MAEtCC,qBAAsB,SAACC,GAAD,OACpB3D,GAAI,SAACmB,GACHA,EAAMkC,gBAAgBE,aAAeI,MAGzCC,iBAAkB,SAACvB,GACjBrC,GAAI,SAACmB,GAAD,MAAY,CAAE8B,UAAWZ,OAO/BwB,gBAAiB,SAACC,GAAD,OACf9D,GAAI,SAACmB,GACH,IAAMqB,EAAUrB,EAAM8B,UACtBT,EAAQK,OAAOiB,EAAU,GACzB3C,EAAM8B,UAAYT,UAKXuB,EAAWhE,KAAO,SAACC,GAAD,MAAU,CACvCgE,UAAW,GACXC,aAAa,EACbC,WAAY,GACZC,SAAU,GACVC,WAAY,KAEZC,eAAgB,SAACJ,GAAD,OAAiBjE,EAAI,CAAEiE,iBAGvCK,cAAe,SAACjC,GACdrC,GAAI,SAACmB,GACHA,EAAM+C,WAAWK,KAAKlC,OAK1BmC,cAAe,WACbxE,GAAI,SAACmB,GACHA,EAAMiD,WAAajD,EAAM+C,WAAWO,UAMxCC,YAAa,SAACrC,GACZrC,GAAI,SAACmB,GACHA,EAAMgD,SAASI,KAAKlC,OAKxBsC,YAAa,WACX3E,GAAI,SAACmB,GACHA,EAAMiD,WAAajD,EAAMgD,SAASM,UAMtCG,eAAgB,WACd5E,GAAI,SAACmB,GACHA,EAAMgD,SAAW,GACjBhD,EAAM+C,WAAa,OAOvBW,aAAc,SAACC,GAAD,OACZ9E,GAAI,SAACmB,GACH,IAAM4D,EAAQ5D,EAAM6C,UAAUgB,QAAQF,GAChCtC,EAAUrB,EAAM6C,UACtBxB,EAAQK,OAAOkC,EAAO,GACtB5D,EAAM6C,UAAYxB,MAGtByC,eAAgB,kBACdjF,GAAI,SAACmB,GAAD,MAAY,CACd6C,UAAW,QAGfkB,aAAc,SAACC,GAAD,OACZnF,GAAI,SAACmB,GAAD,MAAY,CACd6C,UAAU,YAAK,IAAIoB,IAAJ,sBAAYjE,EAAM6C,WAAlB,CAA6BmB,e,OCzL3C,SAASE,IACd,MAA0DhF,IAAlDO,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,wBACtBZ,EAAcH,IAAdG,WACA6B,EAAkBV,IAAlBU,cACR,EAAqDiC,IAA7CC,EAAR,EAAQA,UAAWM,EAAnB,EAAmBA,cAGbgB,GAHN,EAAkCV,eAGbW,oBAGrB,SAASC,IACP,IADmB,EACbC,EAAa,CACjBC,OAAQ,GACRC,OAAQ,IAHS,cAMC3B,GAND,IAMnB,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACnB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SA9BD,8BAoCnBvC,EAAcwC,KAAKC,UAAUtB,IAqE/B,OAlEAuB,qBAAU,WACR,GAAI1B,EAAa2B,QAAS,CACxB,IAAMC,EAAW5B,EAAa2B,QAE1BrG,EACFsG,EAASC,QAAQvG,GAEjBC,EAAwBqG,EAASE,MAGnC,IAAMC,EAAgB,SAACC,GACrB,OAAQA,EAAMC,KACZ,IAAK,IACHL,EAASM,OAAOvH,GAChBiH,EAASC,QAAQ,aACjBtG,EAAwBqG,EAASE,MACjC,MAEF,IAAK,IACHF,EAASM,OAAOvH,GAChBiH,EAASC,QAAQ,SACjBtG,EAAwBqG,EAASE,MACjC,MAEF,IAAK,IACHF,EAASM,OAAOvH,GAChBiH,EAASC,QAAQ,UACjBtG,EAAwBqG,EAASE,MACjC,MACF,IAAK,IACHF,EAASO,SACT,MACF,IAAK,IACHP,EAASQ,SAAWR,EAASQ,QAC7B,MAEF,QACMC,SAASL,EAAMC,MACjB/B,MAMFoC,EAAW,SAACN,GAChBxF,EAAcwF,EAAMO,OAGhBP,EAAMO,OACRrC,KAUJ,OALA0B,EAASY,iBAAiB,mBAAoBF,GAG9CG,SAASD,iBAAiB,UAAWT,GAE9B,WACLU,SAASC,oBAAoB,UAAWX,GACxCH,EAASc,oBAAoB,mBAAoBJ,QAMrD,qCACG3H,GACC,cAACgI,EAAA,EAAD,CAAmBC,IAAK5C,EAAc6C,KAAM,GAAKC,OAAQnI,IAE3D,cAACoI,EAAA,EAAD,CAAeC,aAAW,EAACC,cAAe,Q,oBC3HzC,SAASC,EAAapC,GA2B3B,MAAwB,kBAAVA,EAzBG,SAACqC,GAChB,IAAMC,EAAS,4CAA4CC,KAAKF,GAChE,OAAOC,EACH,CACElC,EAAGoC,SAASF,EAAO,GAAI,IAAM,IAC7BjC,EAAGmC,SAASF,EAAO,GAAI,IAAM,IAC7BhC,EAAGkC,SAASF,EAAO,GAAI,IAAM,KAE/B,KAiB6BG,CAASzC,GAb3B,SAAC0C,GAChB,IAAMC,EAAiB,SAACC,GACtB,IAAMP,EAAMO,EAAEC,SAAS,IACvB,OAAsB,IAAfR,EAAIS,OAAe,IAAMT,EAAMA,GAGlCjC,EAAIR,KAAKmD,MAAc,IAARL,EAAItC,GACnBC,EAAIT,KAAKmD,MAAc,IAARL,EAAIrC,GACnBC,EAAIV,KAAKmD,MAAc,IAARL,EAAIpC,GAEzB,MAAO,IAAMqC,EAAevC,GAAKuC,EAAetC,GAAKsC,EAAerC,GAGjB0C,CAAShD,GCrBhE,IAAMiD,EAAY,SAAC,GAAyB,IAAvBxD,EAAsB,EAAtBA,SAAUyD,EAAY,EAAZA,MACvBC,EAAmBD,EAAME,QACzBC,EAAoBH,EAAMI,QAEhC,EAAsErJ,IAA9DE,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,oBAAqBO,EAA9C,EAA8CA,oBACtChB,EAAkBJ,IAAlBI,cACA8D,EAAcD,IAAdC,UAEF2F,EAAapE,iBAAO,GAAD,OAAIvB,EAAU4F,QAAO,SAACC,GAAD,OAAUA,EAAKhE,SAAS,MAAIqD,OAAS,IAcnF,OACE,uBACErC,KAAI,gBAAW8C,EAAW1C,SAC1BhG,MAAO,CAAC,GAAK,GAAK,IAClBiF,SAAU,CAAC,EAAG,KAAM,GACpBsD,QAAS,SAAClC,GAAD,OAjBQuC,EAiBevC,EAAMc,OAhBxClI,EAAc2J,GACdlJ,EAAoBkJ,EAAKhE,SAAS,GAAGiE,WACrCvJ,EAAgBiI,EAAaqB,EAAKhE,SAAS,GAAGO,QAC9ClF,EAAoB,CAClBH,UAAW8I,EAAK3D,SAChBlF,OAAQ6I,EAAKvD,SAASC,YACtBtF,MAAO4I,EAAK5I,aAEdsI,EAAiBD,EAAMnD,MATL,IAAC0D,GAkBjBE,gBAAiB,kBAAMN,KALzB,UAOE,2CAA2BjC,OAAO,aAChC3B,MAWKmE,EAAe,SAACV,GAC3B,OACE,eAAC,EAAD,CAAWA,MAAOA,EAAlB,UACE,mCAAmB9B,OAAO,WAAWpB,MAAM,UAAU6D,WAAS,IAC9D,8BACE/D,SAAUoD,EAAMpD,SAChBE,MAAM,cAYD8D,EAAmB,SAACZ,GAC/B,IAAMa,EAAW5E,mBAGjB,OAFA6E,YAAUD,EAAUE,yBAAwB,GAG1C,eAAC,EAAD,CAAWf,MAAOA,EAAlB,UACE,mCAAmB9B,OAAO,WAAWpB,MAAM,UAAU6D,WAAS,IAC9D,kCACE/D,SAAUoD,EAAMpD,SAChBgC,IAAKiC,EACL/D,MAAM,QACN,uBAAsB,KACtB,wBAAuB,KACvBkE,YAAU,QAYLC,EAAa,SAACjB,GACzB,IAAMa,EAAW5E,mBAGjB,OAFA6E,YAAUD,EAAUK,mBAAkB,GAGpC,eAAC,EAAD,CAAWlB,MAAOA,EAAlB,UACE,mCAAmB9B,OAAO,WAAWpB,MAAM,UAAU6D,WAAS,IAC9D,4BACE/D,SAAUoD,EAAMpD,SAChBgC,IAAKiC,EACL/D,MAAM,QACNkE,YAAU,QCpGX,SAASG,EAAcnB,GAC5B,MAAqDtG,IAA7CQ,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,qBAGtB6F,EAAmB,SAACpD,GACxB3C,EAAmB2C,GACnBzC,GAAqB,IAIjB+F,EAAoB,WACxBjG,EAAmB,MACnBE,GAAqB,IAGvB,OACE,qCACkB,iBAAf4F,EAAMnD,KACL,mCACE,cAAC,EAAD,2BACMmD,GADN,IAEEE,QAAS,kBAAMD,EAAiBD,EAAMnD,OACtCuD,QAAS,kBAAMD,EAAkBH,EAAMnD,YAGzC,KAEY,qBAAfmD,EAAMnD,KACL,mCACE,cAAC,EAAD,2BACMmD,GADN,IAEEE,QAAS,kBAAMD,EAAiBD,EAAMnD,OACtCuD,QAAS,kBAAMD,EAAkBH,EAAMnD,YAGzC,KAEY,eAAfmD,EAAMnD,KACL,mCACE,cAAC,EAAD,2BACMmD,GADN,IAEEE,QAAS,kBAAMD,EAAiBD,EAAMnD,OACtCuD,QAAS,kBAAMD,EAAkBH,EAAMnD,YAGzC,QC5CH,SAASuE,EAAcpB,GAC5B,IAAMqB,EAAUpF,mBACRrF,EAAkBJ,IAAlBI,cACR,EAAiDG,IAAzCE,EAAR,EAAQA,gBAAiBW,EAAzB,EAAyBA,oBACjBiB,EAAyBJ,IAAzBI,qBACA6B,EAAcD,IAAdC,UAEF4G,EAAYrF,iBAAO,GAAD,OAAIvB,EAAU4F,QAAO,SAACC,GAAD,OAAWA,EAAKhE,SAAS,MAAIqD,OAAS,IAI7E2B,EAAc,uBAClBjI,KAAM0G,EAAM1G,KACZsF,IAAKyC,EACL9D,KAAI,gBAAW+D,EAAU3D,SACzBuC,QA6BF,SAAqBlC,GACnB,IAAMuC,EAAOvC,EAAMc,OACnBlI,EAAc2J,GACdtJ,EAAgBiI,EAAaqB,EAAKxD,SAASD,QAC3ClF,EAAoB,CAClBH,UAAW8I,EAAK3D,SAChBlF,OAAQ6I,EAAKvD,SAASC,YACtBtF,MAAO4I,EAAK5I,QAEdkB,GAAqB,IArCrB4H,gBAAiB,kBAAM5H,GAAqB,IAC5CmI,YAAU,EANQ,UAQhB,WACA,OAAQhB,EAAM3C,cACZ,IAAK,cACH,OAAO,mCAAmBa,OAAO,aACnC,IAAK,iBACH,OAAO,sCAAsBA,OAAO,aACtC,IAAK,mBACH,OAAO,wCAAwBA,OAAO,aACxC,IAAK,eACH,OAAO,oCAAoBA,OAAO,aACpC,IAAK,gBACH,OAAO,qCAAqBA,OAAO,aACrC,IAAK,sBACH,OAAO,2CAA2BA,OAAO,aAC3C,IAAK,sBACH,OAAO,2CAA2BA,OAAO,aAC3C,IAAK,qBACH,OAAO,0CAA0BA,OAAO,aAC1C,IAAK,uBACH,OAAO,4CAA4BA,OAAO,cAnB9C,GAsBF,sCAAsBA,OAAO,WAAWpB,MAAOkD,EAAMlD,WA6CvD,OA5BAY,qBAAU,WACR,IAAM6C,EAAOgB,EAAY3C,IAAIjB,QAEzBqC,EAAMpD,WACR2D,EAAK3D,SAAS4E,EAAIxB,EAAMpD,SAAS4E,EACjCjB,EAAK3D,SAAS6E,EAAIzB,EAAMpD,SAAS6E,EACjClB,EAAK3D,SAAS8E,EAAI1B,EAAMpD,SAAS8E,GAG/B1B,EAAMhD,WACRuD,EAAKvD,SAASwE,EAAIxB,EAAMhD,SAASwE,EACjCjB,EAAKvD,SAASyE,EAAIzB,EAAMhD,SAASyE,EACjClB,EAAKvD,SAAS0E,EAAI1B,EAAMhD,SAAS0E,GAG/B1B,EAAMrI,QACR4I,EAAK5I,MAAM6J,EAAIxB,EAAMrI,MAAM6J,EAC3BjB,EAAK5I,MAAM8J,EAAIzB,EAAMrI,MAAM8J,EAC3BlB,EAAK5I,MAAM+J,EAAI1B,EAAMrI,MAAM+J,GAGzB1B,EAAMlD,OAAgC,iBAAhBkD,EAAMlD,QAC9ByD,EAAKxD,SAASD,MAAQkD,EAAMlD,OAG9BN,QAAQC,IAAI8D,KACX,IAEIgB,E,mBCpFF,SAASI,IAWd,IAVA,MAAsE5K,IAA9DE,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,oBAAqBO,EAA9C,EAA8CA,oBACtCiB,EAAyBJ,IAAzBI,qBACR,EAAqDa,IAA7CQ,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,qBACpBM,EAAcD,IAAdC,UACR,EAAsDlE,IAA9CM,EAAR,EAAQA,eAAgBF,EAAxB,EAAwBA,cAAeD,EAAvC,EAAuCA,WAEjCiL,EAAQlH,EAAUkF,OAClBiC,EAAU,GAGPxI,EAAI,EAAGA,EAAIuI,EAAOvI,IACzBwI,EAAQ5G,KAAK5B,GA4Bf,OACE,mCACE,sBAAKyI,UAAU,kBAAf,UACE,uBAAOA,UAAU,oBAAjB,yBAECD,EAAQE,KAAI,SAACtG,GAAD,OACX,sBAAiCqG,UAAU,oBAA3C,UACE,cAACE,EAAA,EAAD,CACEF,UAAU,8BACVG,OAAQvH,EAAUe,KAAW9E,EAC7BuJ,QAAS,kBAnCAK,EAmCkB7F,EAAUe,GAlC/C7E,EAAc2J,QAGVA,EAAKhE,SAAS,IAChBlF,EAAoBkJ,EAAKhE,SAAS,GAAGiE,WACrCvJ,EAAgBiI,EAAaqB,EAAKhE,SAAS,GAAGO,QAC9ClF,EAAoB,CAClBH,UAAW8I,EAAK3D,SAChBlF,OAAQ6I,EAAKvD,SAASC,YACtBtF,MAAO4I,EAAK5I,QAEduC,EAAmBqG,EAAKhE,SAAS,GAAGM,MACpCzC,GAAqB,KAErBnD,EAAgBiI,EAAaqB,EAAKxD,SAASD,QAC3ClF,EAAoB,CAClBH,UAAW8I,EAAK3D,SAChBlF,OAAQ6I,EAAKvD,SAASC,YACtBtF,MAAO4I,EAAK5I,QAEdkB,GAAqB,KArBL,IAAC0H,GAoCT2B,cAAe,kBAAMpL,EAAe,CAAE6G,QAASjD,EAAUe,MACzD0G,aAAc,kBAAMrL,EAAe,OALrC,SAOG4D,EAAUe,GAAO8B,OAEpB,uBACE6E,YAAY,qBAXN1H,EAAUe,GAAOnC,c,IC1DjC+I,E,OCQG,SAASC,IACd,MAAkDvL,IAA1CK,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,oBAClBV,EAAeH,IAAfG,WAQR,OACE,qBAAKmL,UAAU,kBAAf,SACE,qBAAKA,UAAU,QAAf,SACE,uBACEjF,KAAK,QACL0F,IAAI,IACJC,IAAI,MACJC,aAAc/F,KAAKmD,MAAyB,IAAnBzI,GACzBsL,SAAU,SAAC1E,GAAD,OAbQ,SAACA,GACzBrH,EAAW4F,SAAS,GAAGiE,UAAYxC,EAAM2E,OAAOpE,MAAQ,IACxDlH,EAAoBV,EAAW4F,SAAS,GAAGiE,WAWhBoC,CAAkB5E,IACvC6E,MAAM,UDzBhB,IAAIC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUN,GAAU,IAAK,IAAItJ,EAAI,EAAGA,EAAI6J,UAAUtD,OAAQvG,IAAK,CAAE,IAAI8J,EAASD,UAAU7J,GAAI,IAAK,IAAI4E,KAAOkF,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQlF,KAAQ0E,EAAO1E,GAAOkF,EAAOlF,IAAY,OAAO0E,GAAkBI,EAASQ,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElF,EAAK5E,EAAnEsJ,EAEzF,SAAuCQ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlF,EAAK5E,EAA5DsJ,EAAS,GAAQgB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK9J,EAAI,EAAGA,EAAIsK,EAAW/D,OAAQvG,IAAO4E,EAAM0F,EAAWtK,GAAQqK,EAAShI,QAAQuC,IAAQ,IAAa0E,EAAO1E,GAAOkF,EAAOlF,IAAQ,OAAO0E,EAFxMkB,CAA8BV,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAK9J,EAAI,EAAGA,EAAI0K,EAAiBnE,OAAQvG,IAAO4E,EAAM8F,EAAiB1K,GAAQqK,EAAShI,QAAQuC,IAAQ,GAAkB+E,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQlF,KAAgB0E,EAAO1E,GAAOkF,EAAOlF,IAAU,OAAO0E,EAMne,SAASsB,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrE,EAAQyD,EAAyBS,EAAMpB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDuB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,eACN3C,UAAW,oBACX4C,QAAS,YACT9F,IAAKuF,EACL,kBAAmBE,GAClBrE,GAAQoE,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM/B,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EuC,SAAU,UACVC,EAAG,8hBAIP,IElCI,EAAOC,EFkCPC,EAA0B,aAAiBd,GEhC3C,GFiCW,IEjCC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAWjB,OAAOC,QAAU,SAAUN,GAAU,IAAK,IAAItJ,EAAI,EAAGA,EAAI6J,UAAUtD,OAAQvG,IAAK,CAAE,IAAI8J,EAASD,UAAU7J,GAAI,IAAK,IAAI4E,KAAOkF,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQlF,KAAQ0E,EAAO1E,GAAOkF,EAAOlF,IAAY,OAAO0E,GAAkB,EAASY,MAAMC,KAAMN,WAEhT,SAAS,EAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElF,EAAK5E,EAAnEsJ,EAEzF,SAAuCQ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlF,EAAK5E,EAA5DsJ,EAAS,GAAQgB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK9J,EAAI,EAAGA,EAAIsK,EAAW/D,OAAQvG,IAAO4E,EAAM0F,EAAWtK,GAAQqK,EAAShI,QAAQuC,IAAQ,IAAa0E,EAAO1E,GAAOkF,EAAOlF,IAAQ,OAAO0E,EAFxM,CAA8BQ,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAK9J,EAAI,EAAGA,EAAI0K,EAAiBnE,OAAQvG,IAAO4E,EAAM8F,EAAiB1K,GAAQqK,EAAShI,QAAQuC,IAAQ,GAAkB+E,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQlF,KAAgB0E,EAAO1E,GAAOkF,EAAOlF,IAAU,OAAO0E,EAMne,SAASqC,EAAUd,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrE,EAAQ,EAAyBkE,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,eACN3C,UAAW,wBACX4C,QAAS,YACT9F,IAAKuF,EACL,kBAAmBE,GAClBrE,GAAQoE,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,SAAU,UACVC,EAAG,qEACAC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChED,EAAG,0GAIP,ICpCI,GAAO,GDoCP,GAA0B,aAAiBG,GClC3C,IDmCW,ICnCC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAWhC,OAAOC,QAAU,SAAUN,GAAU,IAAK,IAAItJ,EAAI,EAAGA,EAAI6J,UAAUtD,OAAQvG,IAAK,CAAE,IAAI8J,EAASD,UAAU7J,GAAI,IAAK,IAAI4E,KAAOkF,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQlF,KAAQ0E,EAAO1E,GAAOkF,EAAOlF,IAAY,OAAO0E,GAAkB,GAASY,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElF,EAAK5E,EAAnEsJ,EAEzF,SAAuCQ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlF,EAAK5E,EAA5DsJ,EAAS,GAAQgB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK9J,EAAI,EAAGA,EAAIsK,EAAW/D,OAAQvG,IAAO4E,EAAM0F,EAAWtK,GAAQqK,EAAShI,QAAQuC,IAAQ,IAAa0E,EAAO1E,GAAOkF,EAAOlF,IAAQ,OAAO0E,EAFxM,CAA8BQ,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAK9J,EAAI,EAAGA,EAAI0K,EAAiBnE,OAAQvG,IAAO4E,EAAM8F,EAAiB1K,GAAQqK,EAAShI,QAAQuC,IAAQ,GAAkB+E,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQlF,KAAgB0E,EAAO1E,GAAOkF,EAAOlF,IAAU,OAAO0E,EAMne,SAASsC,GAASf,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrE,EAAQ,GAAyBkE,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,eACN3C,UAAW,2BACX4C,QAAS,YACT9F,IAAKuF,EACL,kBAAmBE,GAClBrE,GAAQoE,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EQ,SAAU,UACVC,EAAG,sNACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChED,SAAU,UACVC,EAAG,sHAIP,IAAI,GAA0B,aAAiBI,IAChC,I,OC1BR,SAASC,KACd,IAAMC,EAAQ,CACZ1N,UAAW,cAAC,EAAD,IACXE,MAAO,cAAC,GAAD,IACPD,OAAQ,cAAC,GAAD,KAIV,EAAkDX,IAA1CS,EAAR,EAAQA,iBAAkBI,EAA1B,EAA0BA,oBAClBjB,EAAeH,IAAfG,WACA4B,EAAeT,IAAfS,WAERmF,qBAAU,WACHnF,GAGLX,EAAoB,CAClBH,UAAWd,EAAWiG,SACtBlF,OAAQf,EAAWqG,SACnBrF,MAAOhB,EAAWgB,UAEnB,CAAChB,EAAYa,EAAkBI,EAAqBW,IAEvD,IAAM6M,EAAqB,SAACpH,EAAOnB,GACjC,OAAQA,GACN,IAAK,YACCmB,EAAM2E,OAAOpE,MACW,gBAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWiG,SAAS4E,EAAI6D,WAAWrH,EAAM2E,OAAOpE,OACjB,gBAAtBP,EAAM2E,OAAOpF,KACtB5G,EAAWiG,SAAS6E,EAAI4D,WAAWrH,EAAM2E,OAAOpE,OAEhD5H,EAAWiG,SAAS8E,EAAI2D,WAAWrH,EAAM2E,OAAOpE,OAGxB,gBAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWiG,SAAS4E,EAAI,EACO,gBAAtBxD,EAAM2E,OAAOpF,KACtB5G,EAAWiG,SAAS6E,EAAI,EAExB9K,EAAWiG,SAAS8E,EAAI,EAG5B,MAEF,IAAK,QACC1D,EAAM2E,OAAOpE,MACW,YAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWgB,MAAM6J,EAAI6D,WAAWrH,EAAM2E,OAAOpE,OACd,YAAtBP,EAAM2E,OAAOpF,KACtB5G,EAAWgB,MAAM8J,EAAI4D,WAAWrH,EAAM2E,OAAOpE,OAE7C5H,EAAWgB,MAAM+J,EAAI2D,WAAWrH,EAAM2E,OAAOpE,OAGrB,YAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWgB,MAAM6J,EAAI,IACU,YAAtBxD,EAAM2E,OAAOpF,KACtB5G,EAAWgB,MAAM8J,EAAI,IAErB9K,EAAWgB,MAAM+J,EAAI,IAGzB,MAEF,IAAK,SACC1D,EAAM2E,OAAOpE,MACW,aAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWqG,SAASwE,EAAI6D,WAAWrH,EAAM2E,OAAOpE,OACnB,aAAtBP,EAAM2E,OAAOpF,KACpB5G,EAAWqG,SAASyE,EAAI4D,WAAWrH,EAAM2E,OAAOpE,OAC7C5H,EAAWqG,SAAS0E,EAAI2D,WAAWrH,EAAM2E,OAAOpE,OAE3B,aAAtBP,EAAM2E,OAAOpF,KACf5G,EAAWqG,SAASwE,EAAI,EACO,aAAtBxD,EAAM2E,OAAOpF,KACtB5G,EAAWqG,SAASyE,EAAI,EAExB9K,EAAWqG,SAAS0E,EAAI,EAShC9J,EAAoB,CAClBH,UAAWd,EAAWiG,SACtBlF,OAAQf,EAAWqG,SACnBrF,MAAOhB,EAAWgB,SAItB,OACE,oBAAImK,UAAU,mBAAd,SAzFa,CAAC,YAAa,QAAS,UA0F1BC,KAAI,SAAClF,GAAD,OACV,sBAAKiF,UAAU,qBAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCqD,EAAMtI,KAC1C,qBAAKiF,UAAU,uBAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,sBAAKA,UAAU,aAAf,UACE,uBACEjF,KAAK,SACLU,KAAI,UAAKV,EAAL,MACJ0F,IAAI,YACJC,IAAI,WACJ8C,KAAe,UAATzI,EAAmB,OAAS,MAClC0I,SAAS,IACThH,OAAQ/G,EAAiBqF,GAAM2E,EAAEgE,QAAQ,GACzC9C,SAAU,SAAC1E,GAAD,OAAWoH,EAAmBpH,EAAOnB,MAEjD,uBAAOiF,UAAU,OAAjB,SACE,0CAGJ,sBAAKA,UAAU,aAAf,UACE,uBACEjF,KAAK,SACLU,KAAI,UAAKV,EAAL,MACJ0F,IAAI,YACJC,IAAI,WACJ8C,KAAe,UAATzI,EAAmB,OAAS,MAClC0I,SAAS,IACThH,OAAQ/G,EAAiBqF,GAAM4E,EAAE+D,QAAQ,GACzC9C,SAAU,SAAC1E,GAAD,OAAWoH,EAAmBpH,EAAOnB,MAEjD,uBAAOiF,UAAU,OAAjB,SACE,0CAGJ,sBAAKA,UAAU,aAAf,UACE,uBACEjF,KAAK,SACLU,KAAI,UAAKV,EAAL,MACJ0F,IAAI,YACJC,IAAI,WACJ8C,KAAe,UAATzI,EAAmB,OAAS,MAClC0I,SAAS,IACThH,OAAQ/G,EAAiBqF,GAAM6E,EAAE8D,QAAQ,GACzC9C,SAAU,SAAC1E,GAAD,OAAWoH,EAAmBpH,EAAOnB,MAEjD,uBAAOiF,UAAU,OAAjB,SACE,iDA9CV,uBAAyDjF,SCpG1D,SAAS4I,KACd,MAA0C1O,IAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBACdN,EAAeH,IAAfG,WACR,EAAqC8D,IAA7BO,EAAR,EAAQA,cAAeN,EAAvB,EAAuBA,UA2CvB,IAAMgL,EAAoB,SAAC1H,GACzB,IAAMwB,EAAMN,EAAalB,EAAM2E,OAAOpE,QAzCxC,WACE,IADmB,EACbpC,EAAa,CACjBC,OAAQ,GACRC,OAAQ,IAHS,cAMC3B,GAND,IAMnB,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACnB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SA9BD,8BAoCnBvC,EAAcwC,KAAKC,UAAUtB,IAQ7BD,GAEIvF,IACEA,EAAW4F,SAAS,GACtB5F,EAAW4F,SAAS,GAAGO,MAAQ0C,EAE/B7I,EAAWoG,SAASD,MAAQ0C,GAIhC,IAAML,EAAMD,EAAaM,GACzBvI,EAAgBkI,IAGlB,OACE,uBACEtC,KAAK,QACL0B,MAAOvH,EACP2O,QAAS,SAAC3H,GAAD,OAAW0H,EAAkB1H,IACtC4H,MAAO,CAAEC,OAAQ,OAAQC,aAAc,SAAUC,QAAS,U,OCnEzD,SAASC,KACd,IAAQ5O,EAAqBL,IAArBK,iBACA2C,EAAoBL,IAApBK,gBAEFkM,EAAa,SAACpJ,GAClB,MAAa,YAATA,GAA+B,iBAATA,EAAgC,gBACxC,gBAATA,GAAmC,qBAATA,EAAoC,oBACrD,UAATA,GAA6B,eAATA,EAA8B,mBACtD,GAIP,OACE,mCACE,qBAAKiF,UAAU,mBAAf,SACGmE,EAAWlM,EAAgBC,YAC1B,qCACE,uBAAO8H,UAAU,qBAAjB,SAAuCmE,EAAWlM,EAAgBC,aAClE,sBAAK8H,UAAU,oCAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,qDAEF,cAAC,GAAD,OAEF,sBAAKA,UAAU,qBAAf,UACE,0CACA,cAAC2D,GAAD,OAEF,sBAAK3D,UAAU,+BAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,8CACA,qBAAKA,UAAU,eAAf,SACE,yCAAUpF,KAAKmD,MAAyB,IAAnBzI,GAArB,YAGJ,cAACkL,EAAD,c,IC9CV,G,UCSG,SAAS4D,KACd,IAAQ/O,EAAoBJ,IAApBI,gBACAR,EAAeH,IAAfG,WAkCR,OACE,eAACwP,GAAA,EAAD,WACE,cAACnE,EAAA,EAAD,CACEF,UAAU,+BACV5B,QAAS,kBAjCTvJ,IACFA,EAAWoG,SAASqJ,aAAc,EAClCzP,EAAWoG,SAAS4D,WAAY,QAElCxJ,EAAgB,cA2Bd,uBAOA,cAAC6K,EAAA,EAAD,CACEF,UAAU,+BACV5B,QAAS,kBA/BTvJ,IACFA,EAAWoG,SAASqJ,aAAc,EAClCzP,EAAWoG,SAAS4D,WAAY,EAEhChK,EAAWoG,SAASsJ,aAAc,QAEpClP,EAAgB,SAuBd,kBAOA,cAAC6K,EAAA,EAAD,CACEF,UAAU,+BACV5B,QAAS,kBA3BTvJ,IACFA,EAAWoG,SAASqJ,aAAc,EAClCzP,EAAWoG,SAAS4D,WAAY,EAEhChK,EAAWoG,SAASsJ,aAAc,QAEpClP,EAAgB,WAmBd,uBD3DN,IAAI,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAW6L,OAAOC,QAAU,SAAUN,GAAU,IAAK,IAAItJ,EAAI,EAAGA,EAAI6J,UAAUtD,OAAQvG,IAAK,CAAE,IAAI8J,EAASD,UAAU7J,GAAI,IAAK,IAAI4E,KAAOkF,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQlF,KAAQ0E,EAAO1E,GAAOkF,EAAOlF,IAAY,OAAO0E,GAAkB,GAASY,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElF,EAAK5E,EAAnEsJ,EAEzF,SAAuCQ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlF,EAAK5E,EAA5DsJ,EAAS,GAAQgB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK9J,EAAI,EAAGA,EAAIsK,EAAW/D,OAAQvG,IAAO4E,EAAM0F,EAAWtK,GAAQqK,EAAShI,QAAQuC,IAAQ,IAAa0E,EAAO1E,GAAOkF,EAAOlF,IAAQ,OAAO0E,EAFxM,CAA8BQ,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAK9J,EAAI,EAAGA,EAAI0K,EAAiBnE,OAAQvG,IAAO4E,EAAM8F,EAAiB1K,GAAQqK,EAAShI,QAAQuC,IAAQ,GAAkB+E,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQlF,KAAgB0E,EAAO1E,GAAOkF,EAAOlF,IAAU,OAAO0E,EAMne,SAAS2D,GAAOpC,EAAMC,GACpB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrE,EAAQ,GAAyBkE,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,GACPC,OAAQ,GACRF,MAAO,6BACPM,SAAU,UACV2B,SAAU,UACV3H,IAAKuF,EACL,kBAAmBE,GAClBrE,GAAQoE,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3ES,EAAG,sbAIP,IEhCI,GFgCA,GAA0B,aAAiByB,IE9B3C,IF+BW,IE/BC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAWtD,OAAOC,QAAU,SAAUN,GAAU,IAAK,IAAItJ,EAAI,EAAGA,EAAI6J,UAAUtD,OAAQvG,IAAK,CAAE,IAAI8J,EAASD,UAAU7J,GAAI,IAAK,IAAI4E,KAAOkF,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQlF,KAAQ0E,EAAO1E,GAAOkF,EAAOlF,IAAY,OAAO0E,GAAkB,GAASY,MAAMC,KAAMN,WAEhT,SAAS,GAAyBC,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkElF,EAAK5E,EAAnEsJ,EAEzF,SAAuCQ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DlF,EAAK5E,EAA5DsJ,EAAS,GAAQgB,EAAaX,OAAOY,KAAKT,GAAqB,IAAK9J,EAAI,EAAGA,EAAIsK,EAAW/D,OAAQvG,IAAO4E,EAAM0F,EAAWtK,GAAQqK,EAAShI,QAAQuC,IAAQ,IAAa0E,EAAO1E,GAAOkF,EAAOlF,IAAQ,OAAO0E,EAFxM,CAA8BQ,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAK9J,EAAI,EAAGA,EAAI0K,EAAiBnE,OAAQvG,IAAO4E,EAAM8F,EAAiB1K,GAAQqK,EAAShI,QAAQuC,IAAQ,GAAkB+E,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQlF,KAAgB0E,EAAO1E,GAAOkF,EAAOlF,IAAU,OAAO0E,EAMne,SAAS6D,GAActC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrE,EAAQ,GAAyBkE,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,GACPC,OAAQ,GACRF,MAAO,6BACPM,SAAU,UACV2B,SAAU,UACV3H,IAAKuF,EACL,kBAAmBE,GAClBrE,GAAQoE,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3ES,EAAG,g6BAIP,IAAI,GAA0B,aAAiB2B,IAChC,I,MCtBR,SAASC,KACd,IAAQ9P,EAAeH,IAAfG,WACR,EAAyCmB,IAAjCO,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,cAavB,OACE,cAAC0J,EAAA,EAAD,CACEF,UAAU,0BACV5B,QAAS,SAAClC,GAbRrH,IACFA,EAAWyH,SAAWzH,EAAWyH,QAE/B9F,GADmB,IAAlBD,KASL,SAIG1B,EAAcA,EAAWyH,QAAU,cAAC,GAAD,IAAa,cAAC,GAAD,IAAqB,O,OCpBrE,SAASsI,KACd,OACE,mCACE,sBAAK5E,UAAU,mBAAf,UACE,uBAAOA,UAAU,qBAAjB,mBACA,sBAAKA,UAAU,oCAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,qDAEF,cAAC,GAAD,OAEF,sBAAKA,UAAU,qBAAf,UACE,0CACA,cAAC2D,GAAD,OAEF,sBAAK3D,UAAU,qBAAf,UACE,2CACA,cAACoE,GAAD,OAEF,sBAAKpE,UAAU,qBAAf,UACE,+CACA,cAAC2E,GAAD,Y,OCzBH,SAASE,GAAO3G,GACrB,OACE,wBAAO8B,UAAU,UAAjB,UACE,uBACEA,UAAU,QACVjF,KAAK,WACL6F,SAAU1C,EAAM0C,SAChBkE,eAAgB5G,EAAM4G,iBAExB,sBAAM9E,UAAU,c,OCPf,SAAS+E,KACd,MAAsF/O,IAA9EC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,iBAAkBC,EAAlD,EAAkDA,WAAYC,EAA9D,EAA8DA,aAAcC,EAA5E,EAA4EA,OAE5E,OACE,mCACE,sBAAK0J,UAAU,mBAAf,UACE,uBAAOA,UAAU,qBAAjB,mBACA,sBAAKA,UAAU,qBAAf,UACE,yCACA,cAAC6E,GAAD,CACEjE,SAAU,SAAC1E,GAAD,OAAWhG,EAAQgG,EAAM2E,OAAOmE,UAC1CF,eAAgB7O,OAGpB,sBAAK+J,UAAU,qBAAf,UACE,4CACA,cAAC6E,GAAD,CACEjE,SAAU,SAAC1E,GAAD,OAAW9F,EAAW8F,EAAM2E,OAAOmE,UAC7CF,eAAgB3O,OAGpB,sBAAK6J,UAAU,qBAAf,UACE,wCACA,cAAC6E,GAAD,CACEjE,SAAU,SAAC1E,GAAD,OAAW5F,EAAO4F,EAAM2E,OAAOmE,UACzCF,eAAgBzO,Y,oBCtBrB,SAAS4O,KACd,IAAQjO,EAAqBkO,IAArBlO,iBACAwB,EAAqB0M,IAArB1M,iBACR,EAAsC0M,IAA9BtM,EAAR,EAAQA,UAAWiB,EAAnB,EAAmBA,eACnB,EAA0CqL,IAAlCpQ,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,eAEvB,OACE,qBAAKgL,UAAU,eAAf,SACE,eAACmF,GAAA,EAAD,CAAa7C,MAAM,OAAOO,GAAG,gBAA7B,UACE,cAACsC,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAMkH,EAAY,iCAF7B,iBAMA,cAACH,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLE,OAAO,QACPnH,QAAS,YAiFnB,SAAkBoH,EAAUC,GAC1B,IAAMC,EAAM/I,SAASgJ,cAAc,KAOnC,GANAD,EAAIE,aACF,OACA,iCAAmCC,mBAAmBJ,IAExDC,EAAIE,aAAa,WAAYJ,GAEzB7I,SAASmJ,YAAa,CACxB,IAAM5J,EAAQS,SAASmJ,YAAY,eACnC5J,EAAM6J,UAAU,SAAS,GAAM,GAC/BL,EAAIM,cAAc9J,QAElBwJ,EAAIO,SA1BJC,CAAS,eAtDX,WACE,IADmB,EACb7L,EAAa,CACjBC,OAAQ,GACRC,OAAQ,IAHS,cAMC3B,GAND,IAMnB,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SA9BC,8BAmCnB,IAAM0K,EAAOzK,KAAKC,UAAUtB,GAG5B,OADAK,QAAQC,IAAIwL,GACLA,EAeM/L,KAtET,kBAOA,cAAC+K,GAAA,EAAYC,KAAb,CAAkBC,KAAK,cAAvB,SACE,uBAAOtK,KAAK,OAAO8H,GAAG,OAAOjC,SAAU,SAACwF,GAAD,OAkE/C,SAAclK,GACZ,IAAMmK,EAAS,IAAIC,WACnBD,EAAO3J,iBAAiB,QAAQ,WAC9B4I,EAAYe,EAAO/I,WAErB+I,EAAOE,WAAWrK,EAAM2E,OAAO2F,MAAM,IAvEeC,CAAKL,QAErD,cAACjB,GAAA,EAAYuB,QAAb,IACA,cAACvB,GAAA,EAAYC,KAAb,CAAkBC,KAAK,cAAvB,oBACA,cAACF,GAAA,EAAYC,KAAb,CAAkBC,KAAK,cAAvB,yBA8CN,SAASC,EAAYjL,GACnB,IAAMpD,EAAOyE,KAAKiL,MAAMtM,GACxBK,QAAQC,IAAI1D,GAEZnC,EAAc,MACdE,EAAe,MACf6E,IACA7C,EAAiBC,EAAKqD,QACtB9B,EAAiBvB,EAAKsD,SCnFnB,SAASqM,KACd,OACE,qBAAK5G,UAAU,eAAf,SACE,eAACmF,GAAA,EAAD,CAAa7C,MAAM,OAAOO,GAAG,gBAA7B,UACE,eAACsC,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLvB,MAAO,CACL+C,QAAS,OACTC,eAAgB,iBAJpB,UAOE,qBAAKhD,MAAO,CAAEiD,OAAQ,KAAtB,kBACA,qBAAKjD,MAAO,CAAEiD,OAAQ,IAAK/L,MAAO,aAAlC,yBAGF,eAACmK,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLvB,MAAO,CACL+C,QAAS,OACTC,eAAgB,iBAJpB,UAOE,qBAAKhD,MAAO,CAAEiD,OAAQ,KAAtB,kBACA,qBAAKjD,MAAO,CAAEiD,OAAQ,IAAK/L,MAAO,aAAlC,yBAIF,eAACmK,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLvB,MAAO,CACL+C,QAAS,OACTC,eAAgB,iBAJpB,UAOE,qBAAKhD,MAAO,CAAEiD,OAAQ,KAAtB,oBACA,qBAAKjD,MAAO,CAAEiD,OAAQ,IAAK/L,MAAO,aAAlC,8BClCH,SAASgM,KACd,IAAQtP,EAAiBf,IAAjBe,aACAK,EAAiBH,IAAjBG,aACR,EAAqCY,IAA7BO,EAAR,EAAQA,cAAeN,EAAvB,EAAuBA,UAEvB,OACE,qBAAKoH,UAAU,eAAf,SACE,eAACmF,GAAA,EAAD,CAAa7C,MAAM,MAAMO,GAAG,eAA5B,UACE,cAACsC,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,cAAe,mBAFjD,kBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,iBAAkB,WAFpD,oBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,mBAAoB,WAFtD,sBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,eAAgB,YAFlD,kBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,gBAAiB,WAFnD,mBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,sBAAuB,aAFzD,yBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,sBAAuB,YAFzD,yBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,qBAAsB,WAFxD,wBAMA,cAAC9B,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,kBAAM6I,EAAiB,uBAAwB,cAF1D,0BAMA,cAAC9B,GAAA,EAAYuB,QAAb,CAAqB1G,UAAU,gBAC/B,cAACmF,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,SAAClC,GAAD,OAAWgL,EAAiBhL,IAFvC,2BAMA,cAACiJ,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,SAAClC,GAAD,OAAWgL,EAAiBhL,IAFvC,+BAMA,cAACiJ,GAAA,EAAYC,KAAb,CACEC,KAAK,cACLjH,QAAS,SAAClC,GAAD,OAAWgL,EAAiBhL,IAFvC,8BAmDN,SAAS+K,EAAiB1L,EAAcP,IAxCxC,WACE,IADmB,EACbX,EAAa,CACjBC,OAAQ,GACRC,OAAQ,IAHS,cAMC3B,GAND,IAMnB,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GAEZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SA/BC,8BAqCnBvC,EAAcwC,KAAKC,UAAUtB,IAI7BD,GACA1C,EAAa,CACXF,KAAMoD,KAAKC,SACXG,MAAOA,EACPO,aAAcA,IAQlB,SAAS2L,EAAiBhL,GACxB,OAAQA,EAAM2E,OAAOsG,WACnB,IAAK,gBACH,IAAMC,EAAa,CACjBtM,SAAU,CAAC,EAAG,EAAG,GACjBC,KAAM,eACNvD,KAAMoD,KAAKC,UAEb9C,EAAaqP,GACb,MAEF,IAAK,oBACH,IAAMC,EAAiB,CACrBvM,SAAU,CAAC,GAAI,IAAK,GACpBC,KAAM,mBACNvD,KAAMoD,KAAKC,UAEb9C,EAAasP,GACb,MAEF,IAAK,cACH,IAAMC,EAAW,CACfxM,SAAU,CAAC,EAAG,IAAK,GACnBC,KAAM,aACNvD,KAAMoD,KAAKC,UAEb9C,EAAauP,KChLN,WAA0B,uCCWlC,SAASC,KACd,OACE,qBAAKvH,UAAU,eAAf,SACE,cAACmF,GAAA,EAAD,CAAa7C,MAAM,OAAOO,GAAG,gBAA7B,SACE,cAACsC,GAAA,EAAYC,KAAb,CACEC,KAAMmC,GACN1D,MAAO,CACL+C,QAAS,OACTC,eAAgB,iBAJpB,SAOE,qBAAKhD,MAAO,CAAEiD,OAAQ,KAAtB,+BCVH,SAASU,KACd,IAAMpE,EAAQ,CACZ1N,UAAW,cAAC,EAAD,IACXE,MAAO,cAAC,GAAD,IACPD,OAAQ,cAAC,GAAD,KAIV,EAA0DX,IAAlDO,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,wBACtBZ,EAAeH,IAAfG,WAER,OACE,qBAAKmL,UAAU,UAAf,SACE,cAACqE,GAAA,EAAD,CAAaqD,UAAQ,EAArB,SAPW,CAAC,YAAa,QAAS,UAQxBzH,KAAI,SAAClF,GAAD,OACV,cAACmF,EAAA,EAAD,CACEF,UAAU,0BAEVG,OAAQtL,GAAcW,IAAyBuF,EAC/CqD,QAASvJ,EAAa,kBAAMY,EAAwBsF,IAAQ,KAJ9D,SAMGsI,EAAMtI,IANT,kBAEkBA,W,iCCjBrB,SAAS4M,KACd,MAA6BC,cAArBC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,OAAQ/K,EAApB,EAAoBA,KACdgL,EAAS,IAAIC,UACbC,EAAeC,mBAAQ,kBAAM,IAAIC,UAAS,IAE1CC,EAAajO,mBACbkO,EAAclO,mBAEpB,EAAqBmO,mBAAS,MAA9B,oBAAOC,EAAP,KAAc3T,EAAd,KAwCM4T,EAAmB,SAACD,EAAO5O,GAC/B,IAAIqB,EAAQ,GAEZ,QAAQ,GAEN,KAAKuN,IAAU5O,IAAoB,IAAVA,GAAyB,IAAVA,GACtCqB,EAAQ,MACR,MAGF,KAAKuN,IAAU5O,IAAoB,IAAVA,GAAyB,IAAVA,GACtCqB,EAAQ,OACR,MAGF,KAAKuN,IAAU5O,IAAoB,IAAVA,GAAyB,IAAVA,GACtCqB,EAAQ,OACR,MAEF,QACEA,EAAQ,YAIZ,OAAOA,GAaT,OAVAyN,aAAS,WACyC,IAAD,EAA3CL,EAAWvM,SAAWwM,EAAYxM,UACpCkM,EAAOW,KAAKZ,EAAOC,QAAQY,SAC3B,UAAAN,EAAYxM,eAAZ,SAAqB+M,WAAWC,sBAAsBd,GACtDF,EAAGiB,WAAY,EACfjB,EAAGkB,aACHlB,EAAGmB,OAAOf,EAAcG,EAAWvM,YAxEf,GA4EjBoN,YACL,qCACE,cAACC,GAAA,EAAD,CACEpM,IAAKsL,EACLlL,aAAa,EACbpC,SAAU,CAAC,EAAG,EAAG,OAEnB,uBACEgC,IAAKuL,EACLc,QAASC,aAAUhB,GACnBtN,SAAU,GAAGiC,EAAK0F,MAAQ,EAAI,MAAO1F,EAAK2F,OAAS,EAAI,KAAM,GAC7DrC,aAAc,kBAAMzL,EAAI,OACxByU,cAAe,SAACnN,GAAD,OAAWtH,EAAIgG,KAAKmD,MAAM7B,EAAMoN,UAAY,KAC3DlL,QAAS,SAAClC,GAAD,OAvFW,SAACA,GACzB,OAAQtB,KAAKmD,MAAM7B,EAAMoN,UAAY,IAEnC,KAAK,EACHxB,EAAOhN,SAASlG,IAAI,EAAG,EAAG,GAC1B,MAGF,KAAK,EACHkT,EAAOhN,SAASlG,KAAK,EAAG,EAAG,GAC3B,MAGF,KAAK,EACHkT,EAAOhN,SAASlG,IAAI,EAAG,EAAG,GAC1B,MAGF,KAAK,EACHkT,EAAOhN,SAASlG,IAAI,GAAI,EAAG,GAC3B,MAGF,KAAK,EACHkT,EAAOhN,SAASlG,IAAI,EAAG,EAAG,GAC1B,MAGF,KAAK,EACHkT,EAAOhN,SAASlG,IAAI,EAAG,GAAI,IA0DP2U,CAAkBrN,IANxC,UAQG,YAAIsN,MAAM,IAAIvJ,KAAI,SAACwJ,EAAG9P,GAAJ,OACjB,qCACE+P,YAAY,WAEZ1O,MAAOwN,EAAiBD,EAAO5O,IAD1BA,MAIT,6BAAagQ,KAAM,CAAC,GAAI,GAAI,SAE9B,8BAAcjL,UAAW,KACzB,4BAAY5D,SAAU,CAAC,GAAI,GAAI,IAAK4D,UAAW,OAEjDuJ,GCpHG,SAAS2B,GAAT,GAA8B,IAAbnP,EAAY,EAAZA,SACdX,EAAiBnB,IAAjBmB,aACAlD,EAAcD,IAAdC,UACR,EAAgEgB,IAAxDC,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,qBAAsBF,EAAzC,EAAyCA,mBACzC,EAAwD1D,IAAlCM,GAAtB,EAAQkF,aAAR,EAAsBlF,gBAAgBF,EAAtC,EAAsCA,cAEhC+U,EAAW1P,mBA4BjB,OAjBAyB,qBAAU,WACR,GAAIiO,EAAShO,QAAS,CACpB,IAAMiO,EAAQD,EAAShO,QAEvBnB,QAAQC,IACNmP,EAAMrP,UAAY,gCAClBqP,EAAMrP,UAGRqP,EAAMrP,SAASpD,SAAQ,SAACoH,GACtB3E,EAAa2E,SAGhB,CAAC7H,EAAWiB,EAAWiC,IAKxB,uBACEgD,IAAK+M,EACLzJ,cAAe,SAAClE,GAAD,OAAWlH,EAAe,CAAE6G,QAASK,EAAMc,UAC1DqD,aAAc,kBAAMrL,EAAe,OACnC2J,gBAAiB,kBA7BnB7J,EAAc,MACd6H,SAASqJ,cAAc,IAAI+D,cAAc,UAAU,CAAC,IAAM,OAC1D3R,EAAmB,WACnBE,GAAqB,IAsBrB,SAMGmC,IC1CA,SAASuP,KACd,MAA4ChU,IAApCC,EAAR,EAAQA,cAAeE,EAAvB,EAAuBA,iBAEvB,OACE,qCACE,uBACE2E,SAAU,CAAC,GAAI,IAAM,GACrB,cAAaF,KAAKqP,GAAK,EACvBC,cAAe/T,EAHjB,UAKE,qCAAqBwT,KAAM,CAAC,IAAK,KAAMvN,OAAO,aAC9C,gCAAgBA,OAAO,WAAW+N,aAAW,EAACC,QAAS,QAExDnU,GACC,4BACE6E,SAAU,CAAC,GAAI,IAAM,GACrB6O,KAAM,CAAC,IAAK,IAAK,UAAW,gBCjB/B,SAASU,KACd,IAAQhU,EAAiBL,IAAjBK,aAER,OACE,mCACGA,GACC,qBACE+F,OAAO,MACPuN,KAAM,CAAC,UAAW,GAAI,QCLzB,SAASW,GAAT,GAAgC,IAAb7P,EAAY,EAAZA,SACxB,EAAsD/F,IAA9CI,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,WAAYG,EAAnC,EAAmCA,eACnC,EAYI2D,IAXFc,EADF,EACEA,aACAb,EAFF,EAEEA,UACA2R,EAHF,EAGEA,cACA1Q,EAJF,EAIEA,eACAX,EALF,EAKEA,cACAE,EANF,EAMEA,cACAN,EAPF,EAOEA,WACAC,EARF,EAQEA,SACAQ,EATF,EASEA,YACAD,EAVF,EAUEA,YACAE,EAXF,EAWEA,eAGF,EAMI7C,IALFC,EADF,EACEA,UACAM,EAFF,EAEEA,gBACAH,EAHF,EAGEA,qBACAF,EAJF,EAIEA,cACAG,EALF,EAKEA,iBAGF,EAMIY,IALFa,EADF,EACEA,gBACAZ,EAFF,EAEEA,UACAS,EAHF,EAGEA,qBACAF,EAJF,EAIEA,mBACAN,EALF,EAKEA,cAoOF,OAjOA8D,qBAAU,WACR,IAAMvB,EAAa,CACjBC,OAAQ,GACRC,OAAQ,IAIV,SAASH,IAAa,IAAD,gBACCxB,GADD,IACnB,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SAzBC,8BA+BnBvC,EAAcwC,KAAKC,UAAUtB,IAG/B,IAAM4B,EAAgB,SAACC,GACrB,OAAQA,EAAMC,KAEZ,IAAK,IACHzB,QAAQC,IAAI,2BAA4B9F,GACxC6F,QAAQC,IAAI,aAAc/B,GAC1B8B,QAAQC,IAAI,aAAc/D,GAC1B8D,QAAQC,IAAI,aAAc9C,GAC1B6C,QAAQC,IAAI,iBAAkB4P,GAC9B7P,QAAQC,IAAI,iBAAkB9D,GAC9B6D,QAAQC,IAAI,iBAAkB7C,GAC9B,MAGF,IAAK,SACHhD,EAAc,MACdsD,EAAmB,MACnBE,GAAqB,GACrBvB,GAAqB,GACrB,MAGF,IAAK,IACGmF,EAAMsO,UACNhR,IACAkB,QAAQC,IAAI,UAElB,MAIF,IAAK,IACD,GAAIuB,EAAMsO,SAA4C,MAAjCzR,EAASA,EAAS+E,OAAS,GAAY,CAAC,IAAD,gBACtClF,GADsC,IAC1D,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SAzBwC,8BA+B1DvC,EAAcwC,KAAKC,UAAUtB,IAE7B,IAAMpD,EAAOyE,KAAKiL,MAAM5N,EAASA,EAAS+E,OAAS,IAEnDvE,IACAzE,EAAc,MACdE,EAAe,MACfsD,GAAqB,GACrBvB,GAAqB,GACrB8C,IACA7C,EAAiBC,EAAKqD,QAExB,MAGJ,IAAK,IAGD,GAAI4B,EAAMsO,SACiC,MAArC1R,EAAWA,EAAWgF,OAAS,GAAY,CAAC,IAAD,gBACzBlF,GADyB,IAC7C,2BAA+B,CAAC,IAArB4B,EAAoB,QAG7B,GAAIA,EAAMC,SAAS,GACjBC,QAAQC,IAAIH,GACZH,EAAWE,OAAOpB,KAAK,CACrB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBC,KAAMP,EAAMC,SAAS,GAAGM,WAErB,CACL,IAAIC,EAAQR,EAAMS,SAASD,MAEP,iBAATA,GACTN,QAAQC,IAAIK,GAGdX,EAAWC,OAAOnB,KAAK,CACvB3B,KAAMoD,KAAKC,SACXC,SAAUN,EAAMM,SAChBI,SAAUV,EAAMU,SAASC,YACzBtF,MAAO2E,EAAM3E,MACbmF,MAAO,CAAEI,EAAGJ,EAAMI,EAAGC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,GAC1CC,aAAcf,EAAMgB,SAAST,KAC7BU,KAAMjB,EAAMiB,SAzB6B,8BA8B7CnC,EAAYoC,KAAKC,UAAUtB,IAE3B,IAAMpD,EAAOyE,KAAKiL,MAAM7N,EAAWA,EAAWgF,OAAS,IACvD1E,IACAtE,EAAc,MACdE,EAAe,MACfsD,GAAqB,GACrBvB,GAAqB,GACrB8C,IACA7C,EAAiBC,EAAKqD,QAK5B,MAEF,IAAK,IAEHF,IACA,MAGF,IAAK,IACH,GAAkB,MAAdvF,GAAsBqH,EAAMsO,QAAS,CACvCxV,EAAe,MACfF,EAAc,MACdwD,GAAqB,GACrBvB,GAAqB,GAGrBqD,IAEA,IAAMqQ,EAAe7T,EAAUkH,OAG/B,GAFA5G,EAAgBrC,GAEZ4V,IAAiB7T,EAAUkH,OAAQ,CAErC,IAAIS,GAAc,EACdmM,GAAuB,EAE3B9R,EAAUvB,SAAQ,SAACC,GACXA,EAAME,KAAO,IAEjBkT,IAEIpT,IAAUzC,IAEZ0J,EAAamM,OAMnBjS,EAAgBiS,EAAsBnM,GAIxC9E,EAAa5E,MAUrB,OADA8H,SAASD,iBAAiB,UAAWT,GAC9B,WACLU,SAASC,oBAAoB,UAAWX,OAIrC,mCAAGxB,I,OCxOL,SAASkQ,KACd,MAAyChU,IAAjCC,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,kBACnB,EAAuCc,IAA/BC,EAAR,EAAQA,UAAWI,EAAnB,EAAmBA,gBACXlD,EAAgBL,IAAhBK,YAQR,OACE,mCACE,eAACuV,GAAD,WACE,eAACM,EAAA,EAAD,CAAQ5K,UAAU,SAAlB,UACE,cAAC4K,EAAA,EAAOC,MAAR,CAAc7K,UAAU,QAAQqF,KAAK,IAArC,mBAGA,eAACyF,EAAA,EAAD,CAAK9K,UAAU,UAAf,UACE,cAACiF,GAAD,IACA,cAAC2B,GAAD,IACA,cAACI,GAAD,IACA,cAACO,GAAD,UAIJ,eAAC,IAAD,CAAWvH,UAAU,YAAY+K,MAAM,WAAvC,UACE,eAAC,IAAD,CAAM/K,UAAU,cAAhB,UACE,cAACyH,GAAD,IAEA,eAAC,IAAD,CACEK,OAAQ,CAAEhN,SAAU,CAAC,EAAG,EAAG,IAC3BkQ,UAAW,CAAExM,OAzBG,SAACyM,GAC3B,OAAoB,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAenN,QAAS,CAACmN,EAAc,IAAMA,IAyB1CC,SAAO,EAHT,UAKE,uBAAO9O,OAAO,aAAauN,KAAM,CAAC,aAClC,cAACU,GAAD,IACA,8BAAc3L,UAAW,KACzB,4BAAY5D,SAAU,CAAC,EAAG,EAAG,IAAK4D,UAAW,KAC7C,4BAAY5D,SAAU,CAAC,GAAI,GAAI,IAAK4D,UAAW,KAE/C,cAACsL,GAAD,IACA,cAAC/P,EAAD,IACA,cAAC0N,GAAD,IAEA,eAACiC,GAAD,WACGhT,EAAUqJ,KAAI,SAAChJ,GAAD,OACb,cAACqI,EAAD,eAAmCrI,GAAfA,EAAKO,SAG1BK,EAAUoI,KAAI,SAAChJ,GAAD,OACb,cAACoI,EAAD,eAAmCpI,GAAfA,EAAKO,YAI7B,cAAC,IAAD,CAAgB2T,cAAe,EAAGrC,WAAW,EAA7C,SACE,cAAC,IAAD,CACEsC,MAAI,EACJC,UAAWtW,EAAc,CAACA,QAAeuW,EACzCC,iBAAiB,QACjBC,aAAc,IACd/I,MAAO,cAMf,cAAC,IAAD,CACEzC,UAAU,gBACVyL,YAAY,QACZC,QAAQ,QACRC,QAAQ,QAJV,SAME,eAAC,IAAD,CAAWZ,MAAM,aAAjB,UACE,cAAC,IAAD,CACE/K,UAAU,mBACVyL,YAAY,QACZC,QAAQ,QAHV,SAKE,cAAC7L,EAAD,MAGF,cAAC,IAAD,CAAMG,UAAU,oBAAhB,SACG/H,EAAgBE,aACf,cAAC+L,GAAD,IACEpN,EACF,cAAC8N,GAAD,IAEA,cAACG,GAAD,mB,cCpHlB6G,IAAS5C,OACP,cAAC,IAAM6C,SAAP,UACE,cAAC,GAAD,MAEFlP,SAASmP,eAAe,U","file":"static/js/main.0790e56f.chunk.js","sourcesContent":["import create from 'zustand';\r\n\r\n// Target State\r\nexport const useTarget = create((set) => ({\r\n  targetMesh: null,\r\n  setTargetMesh: (targetMesh) => set({ targetMesh }),\r\n\r\n  hoveredMesh: null,\r\n  setHoveredMesh: (hoveredMesh) => set({ hoveredMesh }),\r\n}));\r\n\r\n// Property States\r\nexport const useProperty = create((set) => ({\r\n  currentColor: '#ffffff',\r\n  setCurrentColor: (currentColor) => set({ currentColor }),\r\n\r\n  currentShade: 'smooth',\r\n  setCurrentShade: (currentShade) => set({ currentShade }),\r\n\r\n  currentIntensity: 1,\r\n  setCurrentIntensity: (currentIntensity) => set({ currentIntensity }),\r\n\r\n  currentTransformMode: 'translate',\r\n  setCurrentTransformMode: (currentTransformMode) =>\r\n    set({ currentTransformMode }),\r\n\r\n  currentTransform: {\r\n    translate: {},\r\n    rotate: {},\r\n    scale: {},\r\n  },\r\n  setCurrentTransform: (currentTransform) =>\r\n    set((state) => ({\r\n      ...state.currentTransform,\r\n      currentTransform,\r\n    })),\r\n}));\r\n\r\n// Scene States\r\nexport const useScene = create((set) => ({\r\n  isGridVisible: true,\r\n  setGrid: (isGridVisible) => set({ isGridVisible }),\r\n\r\n  isShadowsVisible: true,\r\n  setShadows: (isShadowsVisible) => set({ isShadowsVisible }),\r\n\r\n  isFogVisible: true,\r\n  setFog: (isFogVisible) => set({ isFogVisible }),\r\n\r\n  isMeshVisible: true,\r\n  setVisibility: (isMeshVisible) => set({ isMeshVisible }),\r\n\r\n  isDragging: false,\r\n  setIsDragging: (isDragging) => set({ isDragging }),\r\n}));\r\n\r\n// Model State\r\nexport const useModel = create((set) => ({\r\n  modelData: [],\r\n  modelDataPrev: [],\r\n\r\n  isModelWindowOpen: false,\r\n  setIsModelWindowOpen: (isModelWindowOpen) => set({ isModelWindowOpen }),\r\n\r\n  replaceModelData: (data) => {\r\n    set((state) => {\r\n      state.modelData = data;\r\n    });\r\n  },\r\n\r\n  // function to delete model from modelData list\r\n  // use the uuid of the input object to find the corresponding\r\n  // model in modelData and delete it\r\n  // the input object must be a groupList object\r\n  deleteModelData: (delModel) =>\r\n    set((state) => {\r\n      const newList = state.modelData;\r\n      state.modelData.forEach((entry, i) => {\r\n        if (entry.uuid === delModel.uuid) {\r\n          newList.splice(i, 1);\r\n        }\r\n      });\r\n      state.modelData = newList;\r\n    }),\r\n\r\n  setModelData: (modelDataElement) =>\r\n    set((state) => ({\r\n      modelData: [modelDataElement, ...state.modelData],\r\n    })),\r\n}));\r\n\r\n// Light State\r\nexport const useLight = create((set) => ({\r\n  lightData: [],\r\n  lightDataPrev: [],\r\n  setLightData: (lightDataElement) =>\r\n    set((state) => ({\r\n      lightData: [lightDataElement, ...state.lightData],\r\n    })),\r\n\r\n  lightWindowInfo: {\r\n    lightType: null,\r\n    isWindowOpen: false,\r\n  },\r\n  setLightWindowType: (windowInfoLightType) =>\r\n    set((state) => {\r\n      state.lightWindowInfo.lightType = windowInfoLightType;\r\n    }),\r\n  setLightWindowToggle: (windowInfoIsWindowOpen) =>\r\n    set((state) => {\r\n      state.lightWindowInfo.isWindowOpen = windowInfoIsWindowOpen;\r\n    }),\r\n\r\n  replaceLightData: (data) => {\r\n    set((state) => ({ lightData: data }));\r\n  },\r\n\r\n  // function to delete light from lightData\r\n  // use the uuid of the input object to find the corresponding\r\n  // light in lightData and delete it\r\n  // the input object must be a groupList object\r\n  deleteLightData: (delIndex) =>\r\n    set((state) => {\r\n      const newList = state.lightData;\r\n      newList.splice(delIndex, 1);\r\n      state.lightData = newList;\r\n    }),\r\n}));\r\n\r\n// Group State\r\nexport const useGroup = create((set) => ({\r\n  groupList: [],\r\n  undoingMode: false,\r\n  statesList: [],\r\n  redoList: [],\r\n  justPopped: null,\r\n\r\n  setUndoingMode: (undoingMode) => set({ undoingMode }),\r\n\r\n    //add entry to state history\r\n  setStatesList: (data) => {\r\n    set((state) => {\r\n      state.statesList.push(data);\r\n    });\r\n  },\r\n\r\n    //remove an entry from state history\r\n  popStatesList: () => {\r\n    set((state) => {\r\n      state.justPopped = state.statesList.pop();\r\n\r\n    });\r\n  },\r\n\r\n    //add entry to redo list\r\n  setRedoList: (data) => {\r\n    set((state) => {\r\n      state.redoList.push(data);\r\n    });\r\n  },\r\n\r\n    //remove an entry from the redo list\r\n  popRedoList: () => {\r\n    set((state) => {\r\n      state.justPopped = state.redoList.pop();\r\n\r\n    });\r\n  },\r\n\r\n    //reset the undo history\r\n  resetUndoLists: () => {\r\n    set((state) => {\r\n      state.redoList = [];\r\n      state.statesList = [];\r\n    });\r\n  },\r\n\r\n  // useGroup function to delete the specified object from the group list\r\n  // input is a group object to delete\r\n  // make a copy, delete from copy, set state to copy\r\n  delGroupList: (delGroup) =>\r\n    set((state) => {\r\n      const index = state.groupList.indexOf(delGroup);\r\n      const newList = state.groupList;\r\n      newList.splice(index, 1);\r\n      state.groupList = newList;\r\n    }),\r\n\r\n  resetGroupList: () =>\r\n    set((state) => ({\r\n      groupList: [],\r\n    })),\r\n\r\n  setGroupList: (groupListElement) =>\r\n    set((state) => ({\r\n      groupList: [...new Set([...state.groupList, groupListElement])],\r\n    })),\r\n}));\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { OrbitControls, TransformControls } from '@react-three/drei';\r\nimport { useProperty, useTarget, useScene, useGroup, useLight, useModel } from './context.js';\r\n\r\n/**\r\n * Contains the transform controls that attaches to the selected mesh.\r\n * Also includes the hotkeys for the transform controls.\r\n * \r\n * @returns {Object} JSX containing transform controls component.\r\n */\r\nexport function Controls() {\r\n  const { currentTransformMode, setCurrentTransformMode } = useProperty();\r\n  const { targetMesh} = useTarget();\r\n  const { setIsDragging } = useScene();\r\n  const { groupList, setStatesList, resetUndoLists } = useGroup();\r\n\r\n  // Transform Controls reference so that we can change its properties\r\n  const transformRef = useRef();\r\n\r\n    //function to save the state history\r\n  function serialize() {\r\n    const serialized = {\r\n      models: [],\r\n      lights: [],\r\n    };\r\n\r\n    for (const thing of groupList) {\r\n      // check if this thing is a model or a light\r\n      // and put it in the correct category\r\n      if (thing.children[0]) {\r\n        console.log(thing);\r\n        serialized.lights.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          type: thing.children[0].type,\r\n        });\r\n      } else {\r\n        let color = thing.material.color;\r\n\r\n        if (typeof color != 'object') {\r\n          console.log(color);\r\n        }\r\n\r\n        serialized.models.push({\r\n            uuid: Math.random(),\r\n            position: thing.position,\r\n            rotation: thing.rotation.toVector3(),\r\n            scale: thing.scale,\r\n            color: { r: color.r, g: color.g, b: color.b },\r\n            geometryType: thing.geometry.type,\r\n            name: thing.name,\r\n            });\r\n      }\r\n    }\r\n\r\n    // saver = serialized;\r\n    setStatesList(JSON.stringify(serialized));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (transformRef.current) {\r\n      const controls = transformRef.current;\r\n\r\n      if (currentTransformMode) {\r\n        controls.setMode(currentTransformMode);\r\n      } else {\r\n        setCurrentTransformMode(controls.mode);\r\n      }\r\n\r\n      const handleKeyDown = (event) => {\r\n        switch (event.key) {\r\n          case 'w':\r\n            controls.attach(targetMesh);\r\n            controls.setMode('translate');\r\n            setCurrentTransformMode(controls.mode);\r\n            break;\r\n\r\n          case 'e':\r\n            controls.attach(targetMesh);\r\n            controls.setMode('scale');\r\n            setCurrentTransformMode(controls.mode);\r\n            break;\r\n\r\n          case 'r':\r\n            controls.attach(targetMesh);\r\n            controls.setMode('rotate');\r\n            setCurrentTransformMode(controls.mode);\r\n            break;\r\n          case 'd':\r\n            controls.detach();\r\n            break;\r\n          case 't':\r\n            controls.visible = !controls.visible;\r\n            break;\r\n\r\n          default:\r\n            if (isFinite(event.key)) {\r\n              serialize();\r\n            }\r\n            break;\r\n        }\r\n      };\r\n\r\n      const callback = (event) => {\r\n        setIsDragging(event.value);\r\n\r\n        //if the transform just began, save the state\r\n        if (event.value) {\r\n          serialize();\r\n        }\r\n      };\r\n\r\n        //event listener for dragging\r\n      controls.addEventListener('dragging-changed', callback);\r\n\r\n      //event listener for a keypress while object is selected\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n        controls.removeEventListener('dragging-changed', callback);\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {targetMesh && (\r\n        <TransformControls ref={transformRef} size={0.4} object={targetMesh} />\r\n      )}\r\n      <OrbitControls makeDefault dampingFactor={0.3} />\r\n    </>\r\n  );\r\n}\r\n","\r\n/**\r\n * Take in the value in rgb and convert it to hex format\r\n * \r\n * @param {number, number, number} color \r\n * @returns {string} color in hex or rgb format\r\n */\r\nexport function convertColor(color) {\r\n  // Convert hex string to an rgb object\r\n  const hexToRgb = (hex) => {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16) / 255,\r\n          g: parseInt(result[2], 16) / 255,\r\n          b: parseInt(result[3], 16) / 255,\r\n        }\r\n      : null;\r\n  };\r\n\r\n  // Convert rgb object to a hex string\r\n  const rgbToHex = (rgb) => {\r\n    const componentToHex = (c) => {\r\n      const hex = c.toString(16);\r\n      return hex.length === 1 ? '0' + hex : hex;\r\n    };\r\n\r\n    const r = Math.floor(rgb.r * 255);\r\n    const g = Math.floor(rgb.g * 255);\r\n    const b = Math.floor(rgb.b * 255);\r\n\r\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n  };\r\n\r\n  return typeof color === 'string' ? hexToRgb(color) : rgbToHex(color);\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { useHelper } from '@react-three/drei';\r\nimport { DirectionalLightHelper, PointLightHelper } from 'three';\r\nimport { useGroup, useProperty, useTarget } from './context.js';\r\nimport { convertColor } from './color-converter.js';\r\n\r\n/**\r\n * The selectable mesh that accompanies each light.\r\n * \r\n * @param {object} children Actual light component.\r\n * @param {object} props Light's properties.\r\n * @returns {object} JSX containing specific light.\r\n */\r\nconst LightMesh = ({ children, props }) => {\r\n  const handleLightClick = props.onClick;\r\n  const handleWindowClose = props.onClose;\r\n\r\n  const { setCurrentColor, setCurrentIntensity, setCurrentTransform } = useProperty();\r\n  const { setTargetMesh } = useTarget();\r\n  const { groupList } = useGroup();\r\n\r\n  const lightIndex = useRef(`${groupList.filter((mesh) => mesh.children[0]).length + 1}`);\r\n\r\n  const handleClick = (mesh) => {\r\n    setTargetMesh(mesh);\r\n    setCurrentIntensity(mesh.children[0].intensity);\r\n    setCurrentColor(convertColor(mesh.children[0].color));\r\n    setCurrentTransform({\r\n      translate: mesh.position,\r\n      rotate: mesh.rotation.toVector3(),\r\n      scale: mesh.scale,\r\n    });\r\n    handleLightClick(props.type);\r\n  };\r\n\r\n  return (\r\n    <mesh\r\n      name={`Light ${lightIndex.current}`}\r\n      scale={[0.1, 0.1, 0.1]}\r\n      position={[0, 1.55, 0]}\r\n      onClick={(event) => handleClick(event.object)} /// event.object is the mesh object that holds the light object\r\n      onPointerMissed={() => handleWindowClose()}\r\n    >\r\n      <icosahedronBufferGeometry attach='geometry' />\r\n      { children }\r\n    </mesh>\r\n  );\r\n}\r\n\r\n/**\r\n * The ambient light component.\r\n * \r\n * @param {object} props \r\n * @returns {object} JSX containing the ambient light.\r\n */\r\nexport const AmbientLight = (props) => {\r\n  return (\r\n    <LightMesh props={props}>\r\n      <meshBasicMaterial attach='material' color='hotpink' wireframe />\r\n      <ambientLight\r\n        position={props.position}\r\n        color='white'\r\n      />\r\n    </LightMesh>\r\n  );\r\n};\r\n\r\n/**\r\n * The directional light component.\r\n * \r\n * @param {object} props \r\n * @returns {object} JSX containing the directional light.\r\n */\r\nexport const DirectionalLight = (props) => {\r\n  const lightRef = useRef();\r\n  useHelper(lightRef, DirectionalLightHelper, 5);  // The outline that accompanies the light to show direction\r\n\r\n  return (\r\n    <LightMesh props={props}>\r\n      <meshBasicMaterial attach='material' color='hotpink' wireframe />\r\n      <directionalLight\r\n        position={props.position}\r\n        ref={lightRef}\r\n        color='white'\r\n        shadow-mapSize-width={2048}\r\n        shadow-mapSize-height={2048}\r\n        castShadow\r\n      />\r\n    </LightMesh>\r\n  );\r\n};\r\n\r\n/**\r\n * The ambient light component.\r\n * \r\n * @param {object} props \r\n * @returns {object} JSX containing the point light.\r\n */\r\nexport const PointLight = (props) => {\r\n  const lightRef = useRef();\r\n  useHelper(lightRef, PointLightHelper, 5); // The outline that accompanies the light to show direction\r\n\r\n  return (\r\n    <LightMesh props={props}>\r\n      <meshBasicMaterial attach='material' color='hotpink' wireframe />\r\n      <pointLight\r\n        position={props.position}\r\n        ref={lightRef}\r\n        color='white'\r\n        castShadow\r\n      />\r\n    </LightMesh>\r\n  );\r\n};\r\n","import { useLight } from './context';\r\nimport { AmbientLight, DirectionalLight, PointLight } from './lights.js';\r\n\r\n/**\r\n * Single component responsible for outputting the lights.\r\n * \r\n * @param {object} props The relevant props for the lights.\r\n * @returns {object} JSX containing all the possible lights.\r\n */\r\nexport function LightRenderer(props) {\r\n  const { setLightWindowType, setLightWindowToggle } = useLight();\r\n\r\n  // If light is clicked, then setLightWindowType to its type and setLightWindowToggle to on\r\n  const handleLightClick = (type) => {\r\n    setLightWindowType(type);\r\n    setLightWindowToggle(true);\r\n  };\r\n\r\n  // If anywhere but the light is clicked, then setLightWindowToggle to off\r\n  const handleWindowClose = () => {\r\n    setLightWindowType(null);\r\n    setLightWindowToggle(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.type === 'AmbientLight' ? (\r\n        <>\r\n          <AmbientLight\r\n            {...props}\r\n            onClick={() => handleLightClick(props.type)} // Pass above functions as onClick and onClose props\r\n            onClose={() => handleWindowClose(props.type)}\r\n          />\r\n        </>\r\n      ) : null}\r\n\r\n      {props.type === 'DirectionalLight' ? (\r\n        <>\r\n          <DirectionalLight\r\n            {...props}\r\n            onClick={() => handleLightClick(props.type)}\r\n            onClose={() => handleWindowClose(props.type)}\r\n          />\r\n        </>\r\n      ) : null}\r\n\r\n      {props.type === 'PointLight' ? (\r\n        <>\r\n          <PointLight\r\n            {...props}\r\n            onClick={() => handleLightClick(props.type)}\r\n            onClose={() => handleWindowClose(props.type)}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useGroup, useModel, useProperty, useTarget } from './context.js';\r\nimport { convertColor } from './color-converter.js';\r\n\r\n/**\r\n * Single component responsible for outputting the models.\r\n * \r\n * @param {object} props \r\n * @returns {object} JSX containing all possible models.\r\n */\r\nexport function ModelRenderer(props) {\r\n  const meshRef = useRef();\r\n  const { setTargetMesh } = useTarget();\r\n  const { setCurrentColor, setCurrentTransform } = useProperty();\r\n  const { setIsModelWindowOpen } = useModel();\r\n  const { groupList } = useGroup();\r\n\r\n  const meshIndex = useRef(`${groupList.filter((mesh) => !mesh.children[0]).length + 1}`);\r\n\r\n  // create the mesh element up here\r\n  // so we can mess with it before we render it\r\n  const meshElement = <mesh\r\n    uuid={props.uuid}\r\n    ref={meshRef}\r\n    name={`Model ${meshIndex.current}`}\r\n    onClick={handleClick}\r\n    onPointerMissed={() => setIsModelWindowOpen(false)}\r\n    castShadow\r\n  >\r\n    {(() => {\r\n      switch (props.geometryType) {\r\n        case \"BoxGeometry\":\r\n          return <boxBufferGeometry attach=\"geometry\" />\r\n        case \"SphereGeometry\":\r\n          return <sphereBufferGeometry attach=\"geometry\" />\r\n        case \"CylinderGeometry\":\r\n          return <cylinderBufferGeometry attach=\"geometry\" />\r\n        case \"ConeGeometry\":\r\n          return <coneBufferGeometry attach=\"geometry\" />\r\n        case \"TorusGeometry\":\r\n          return <torusBufferGeometry attach=\"geometry\" />\r\n        case \"TetrahedronGeometry\":\r\n          return <tetrahedronBufferGeometry attach=\"geometry\" />\r\n        case \"IcosahedronGeometry\":\r\n          return <icosahedronBufferGeometry attach=\"geometry\" />\r\n        case \"OctahedronGeometry\":\r\n          return <octahedronBufferGeometry attach=\"geometry\" />\r\n        case \"DodecahedronGeometry\":\r\n          return <dodecahedronBufferGeometry attach=\"geometry\" />\r\n      }\r\n    })()}\r\n    <meshStandardMaterial attach=\"material\" color={props.color} />\r\n  </mesh>\r\n\r\n  function handleClick(event) {\r\n    const mesh = event.object\r\n    setTargetMesh(mesh);\r\n    setCurrentColor(convertColor(mesh.material.color));\r\n    setCurrentTransform({\r\n      translate: mesh.position,\r\n      rotate: mesh.rotation.toVector3(),\r\n      scale: mesh.scale,\r\n    });\r\n    setIsModelWindowOpen(true);\r\n  };\r\n\r\n  // when the mesh is first rendered, set its values to the given initial properties\r\n  // this is used for state deserialization (aka loading)\r\n  useEffect(() => {\r\n    const mesh = meshElement.ref.current\r\n\r\n    if (props.position) {\r\n      mesh.position.x = props.position.x\r\n      mesh.position.y = props.position.y\r\n      mesh.position.z = props.position.z\r\n    }\r\n\r\n    if (props.rotation) {\r\n      mesh.rotation.x = props.rotation.x\r\n      mesh.rotation.y = props.rotation.y\r\n      mesh.rotation.z = props.rotation.z\r\n    }\r\n\r\n    if (props.scale) {\r\n      mesh.scale.x = props.scale.x\r\n      mesh.scale.y = props.scale.y\r\n      mesh.scale.z = props.scale.z\r\n    }\r\n\r\n    if (props.color && typeof(props.color) == \"object\") {\r\n      mesh.material.color = props.color\r\n    }\r\n\r\n    console.log(mesh)\r\n  }, [])\r\n\r\n  return meshElement\r\n}\r\n","import { Button } from 'react-bootstrap';\r\nimport { useGroup, useLight, useModel, useProperty, useTarget } from './context.js';\r\nimport { convertColor } from './color-converter.js';\r\nimport '../styles/object-list.css';\r\n\r\n/**\r\n * ObjectList: A List of meshes and lights that populate the screen\r\n * List Item consist of a button and a textbox\r\n * Button: press to select that mesh in the viewport\r\n * Textbox: names the mesh with user input\r\n * @returns {object} JSX containing the button and textbox\r\n */\r\nexport function ObjectList() {\r\n  const { setCurrentColor, setCurrentIntensity, setCurrentTransform } = useProperty();\r\n  const { setIsModelWindowOpen } = useModel();\r\n  const { setLightWindowType, setLightWindowToggle } = useLight();\r\n  const { groupList } = useGroup();\r\n  const { setHoveredMesh, setTargetMesh, targetMesh } = useTarget();\r\n\r\n  const total = groupList.length;\r\n  const objList = [];\r\n\r\n  //push total(# of meshes) indices into objList\r\n  for (let i = 0; i < total; i++) {\r\n    objList.push(i);\r\n  }\r\n  //handles which window(model, light) populates the bottom pane in the outliner\r\n  const handleClick = (mesh) => {\r\n    setTargetMesh(mesh);\r\n    //if mesh has children then it is a light source, open light window\r\n    //else then it is a mesh, open model window\r\n    if (mesh.children[0]) {\r\n      setCurrentIntensity(mesh.children[0].intensity);\r\n      setCurrentColor(convertColor(mesh.children[0].color));\r\n      setCurrentTransform({\r\n        translate: mesh.position,\r\n        rotate: mesh.rotation.toVector3(),\r\n        scale: mesh.scale,\r\n      });\r\n      setLightWindowType(mesh.children[0].type);\r\n      setLightWindowToggle(true);\r\n    } else {\r\n      setCurrentColor(convertColor(mesh.material.color));\r\n      setCurrentTransform({\r\n        translate: mesh.position,\r\n        rotate: mesh.rotation.toVector3(),\r\n        scale: mesh.scale,\r\n      });\r\n      setIsModelWindowOpen(true);\r\n    }\r\n  };\r\n  //Button representing corresponding model, and input box for naming the mesh\r\n  return (\r\n    <>\r\n      <div className='object-list-top'>\r\n        <label className='object-list-title'>Object List</label>\r\n\r\n        {objList.map((index) => (\r\n          <div key={groupList[index].uuid} className='object-list-items'>\r\n            <Button\r\n              className='btn-light object-list-items'\r\n              active={groupList[index] === targetMesh}\r\n              onClick={() => handleClick(groupList[index])}\r\n              onPointerOver={() => setHoveredMesh({ current: groupList[index] })}\r\n              onPointerOut={() => setHoveredMesh(null)}\r\n            >\r\n              {groupList[index].name}\r\n            </Button>\r\n            <input\r\n              placeholder=\"Type Mesh Name\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTranslate(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-arrows-move\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.646.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 1.707V5.5a.5.5 0 0 1-1 0V1.707L6.354 2.854a.5.5 0 1 1-.708-.708l2-2zM8 10a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7.5 14.293V10.5A.5.5 0 0 1 8 10zM.146 8.354a.5.5 0 0 1 0-.708l2-2a.5.5 0 1 1 .708.708L1.707 7.5H5.5a.5.5 0 0 1 0 1H1.707l1.147 1.146a.5.5 0 0 1-.708.708l-2-2zM10 8a.5.5 0 0 1 .5-.5h3.793l-1.147-1.146a.5.5 0 0 1 .708-.708l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L14.293 8.5H10.5A.5.5 0 0 1 10 8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTranslate);\nexport default __webpack_public_path__ + \"static/media/translate.71fe0c1f.svg\";\nexport { ForwardRef as ReactComponent };","import { useProperty, useTarget } from './context.js';\r\nimport '../styles/range-input.css';\r\n\r\n/**\r\n * A UI that provides control over the selected light's intensity.\r\n * \r\n * @returns {object} JSX of the intensity range UI.\r\n */\r\nexport function Range() {\r\n  const { currentIntensity, setCurrentIntensity } = useProperty();\r\n  const { targetMesh } = useTarget();\r\n\r\n  // Directly change target light's intensity and save intensity for window\r\n  const handleRangeChange = (event) => {\r\n    targetMesh.children[0].intensity = event.target.value / 100;\r\n    setCurrentIntensity(targetMesh.children[0].intensity);\r\n  };\r\n\r\n  return (\r\n    <div className='range-container'>\r\n      <div className='field'>\r\n        <input\r\n          type='range'\r\n          min='0'\r\n          max='100'\r\n          defaultValue={Math.floor(currentIntensity * 100)} // Divide and multiply by 100 because intensity is a decimal\r\n          onChange={(event) => handleRangeChange(event)}\r\n          steps='1'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRotate(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-arrow-clockwise\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRotate);\nexport default __webpack_public_path__ + \"static/media/rotate.f90e86ac.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgScale(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-box-arrow-up-right\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgScale);\nexport default __webpack_public_path__ + \"static/media/scale.f4dd501c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\r\nimport { ReactComponent as TranslateIcon } from '../icons/translate.svg';\r\nimport { ReactComponent as RotateIcon } from '../icons/rotate.svg';\r\nimport { ReactComponent as ScaleIcon } from '../icons/scale.svg';\r\nimport { useProperty, useTarget, useScene } from './context.js';\r\nimport '../styles/number-input.css';\r\n\r\n/**\r\n * A UI that provides more selective control over the transform controls.\r\n * \r\n * @returns {object} JSX of the transform control UI.\r\n */\r\nexport function Number() {\r\n  const icons = {\r\n    translate: <TranslateIcon />,\r\n    scale: <ScaleIcon />,\r\n    rotate: <RotateIcon />,\r\n  };\r\n  const select = ['translate', 'scale', 'rotate'];\r\n\r\n  const { currentTransform, setCurrentTransform } = useProperty();\r\n  const { targetMesh } = useTarget();\r\n  const { isDragging } = useScene();\r\n\r\n  useEffect(() => {\r\n    if (!isDragging) {\r\n      return;\r\n    }\r\n    setCurrentTransform({\r\n      translate: targetMesh.position,\r\n      rotate: targetMesh.rotation,\r\n      scale: targetMesh.scale,\r\n    });\r\n  }, [targetMesh, currentTransform, setCurrentTransform, isDragging]);\r\n\r\n  const handleNumberChange = (event, type) => {\r\n    switch (type) {\r\n      case 'translate':\r\n        if (event.target.value) {\r\n          if (event.target.name === 'translate-X') {\r\n            targetMesh.position.x = parseFloat(event.target.value);\r\n          } else if (event.target.name === 'translate-Y') {\r\n            targetMesh.position.y = parseFloat(event.target.value);\r\n          } else {\r\n            targetMesh.position.z = parseFloat(event.target.value);\r\n          }\r\n        } else {\r\n          if (event.target.name === 'translate-X') {\r\n            targetMesh.position.x = 0;\r\n          } else if (event.target.name === 'translate-Y') {\r\n            targetMesh.position.y = 0;\r\n          } else {\r\n            targetMesh.position.z = 0;\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'scale':\r\n        if (event.target.value) {\r\n          if (event.target.name === 'scale-X') {\r\n            targetMesh.scale.x = parseFloat(event.target.value);\r\n          } else if (event.target.name === 'scale-Y') {\r\n            targetMesh.scale.y = parseFloat(event.target.value);\r\n          } else {\r\n            targetMesh.scale.z = parseFloat(event.target.value);\r\n          }\r\n        } else {\r\n          if (event.target.name === 'scale-X') {\r\n            targetMesh.scale.x = 0.01;\r\n          } else if (event.target.name === 'scale-Y') {\r\n            targetMesh.scale.y = 0.01;\r\n          } else {\r\n            targetMesh.scale.z = 0.01;\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'rotate':\r\n        if (event.target.value) {\r\n          if (event.target.name === 'rotate-X')\r\n            targetMesh.rotation.x = parseFloat(event.target.value);\r\n          else if (event.target.name === 'rotate-Y')\r\n            targetMesh.rotation.y = parseFloat(event.target.value);\r\n          else targetMesh.rotation.z = parseFloat(event.target.value);\r\n        } else {\r\n          if (event.target.name === 'rotate-X') {\r\n            targetMesh.rotation.x = 0;\r\n          } else if (event.target.name === 'rotate-Y') {\r\n            targetMesh.rotation.y = 0;\r\n          } else {\r\n            targetMesh.rotation.z = 0;\r\n          }\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setCurrentTransform({\r\n      translate: targetMesh.position,\r\n      rotate: targetMesh.rotation,\r\n      scale: targetMesh.scale,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ul className='number-container'>\r\n      {select.map((type) => (\r\n        <div className='number-input-items' key={`number-input ${type}`}>\r\n          <div className='number-input-icon'>{icons[type]}</div>\r\n          <div className='number-input-wrapper'>\r\n            <ul className='number-input-list'>\r\n              <div className='number-box'>\r\n                <input\r\n                  type='number'\r\n                  name={`${type}-X`}\r\n                  min='-Infinity'\r\n                  max='Infinity'\r\n                  step={type === 'scale' ? '0.01' : '0.1'}\r\n                  tabIndex='1'\r\n                  value={+currentTransform[type].x.toFixed(2)}\r\n                  onChange={(event) => handleNumberChange(event, type)}\r\n                />\r\n                <label className='axis'>\r\n                  <span>X</span>\r\n                </label>\r\n              </div>\r\n              <div className='number-box'>\r\n                <input\r\n                  type='number'\r\n                  name={`${type}-Y`}\r\n                  min='-Infinity'\r\n                  max='Infinity'\r\n                  step={type === 'scale' ? '0.01' : '0.1'}\r\n                  tabIndex='1'\r\n                  value={+currentTransform[type].y.toFixed(2)}\r\n                  onChange={(event) => handleNumberChange(event, type)}\r\n                />\r\n                <label className='axis'>\r\n                  <span>Y</span>\r\n                </label>\r\n              </div>\r\n              <div className='number-box'>\r\n                <input\r\n                  type='number'\r\n                  name={`${type}-Z`}\r\n                  min='-Infinity'\r\n                  max='Infinity'\r\n                  step={type === 'scale' ? '0.01' : '0.1'}\r\n                  tabIndex='1'\r\n                  value={+currentTransform[type].z.toFixed(2)}\r\n                  onChange={(event) => handleNumberChange(event, type)}\r\n                />\r\n                <label className='axis'>\r\n                  <span>Z</span>\r\n                </label>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useProperty, useTarget, useGroup } from './context.js';\r\nimport { convertColor } from './color-converter.js';\r\n\r\n/**\r\n * Check which component is selected\r\n * Change color for selected component in the correct format\r\n *\r\n * @returns {object} JSX containing the new color for the object\r\n */\r\nexport function ColorSelect() {\r\n  const { currentColor, setCurrentColor } = useProperty();\r\n  const { targetMesh } = useTarget();\r\n  const { setStatesList, groupList } = useGroup();\r\n\r\n    //function to save the state history\r\n  function serialize() {\r\n    const serialized = {\r\n      models: [],\r\n      lights: [],\r\n    };\r\n\r\n    for (const thing of groupList) {\r\n      // check if this thing is a model or a light\r\n      // and put it in the correct category\r\n      if (thing.children[0]) {\r\n        console.log(thing);\r\n        serialized.lights.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          type: thing.children[0].type,\r\n        });\r\n      } else {\r\n        let color = thing.material.color;\r\n\r\n        if (typeof color != 'object') {\r\n          console.log(color);\r\n        }\r\n\r\n        serialized.models.push({\r\n            uuid: Math.random(),\r\n            position: thing.position,\r\n            rotation: thing.rotation.toVector3(),\r\n            scale: thing.scale,\r\n            color: { r: color.r, g: color.g, b: color.b },\r\n            geometryType: thing.geometry.type,\r\n            name: thing.name,\r\n            });\r\n      }\r\n    }\r\n\r\n    // saver = serialized;\r\n    setStatesList(JSON.stringify(serialized));\r\n  }\r\n\r\n  // Handler for input (converts value into hex)\r\n  const handleInputChange = (event) => {\r\n    const rgb = convertColor(event.target.value);\r\n\r\n    //save the state before doing anything\r\n    serialize();\r\n\r\n    if (targetMesh) {\r\n      if (targetMesh.children[0]) {\r\n        targetMesh.children[0].color = rgb;\r\n      } else {\r\n        targetMesh.material.color = rgb;\r\n      }\r\n    }\r\n\r\n    const hex = convertColor(rgb);\r\n    setCurrentColor(hex);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type='color'\r\n      value={currentColor}\r\n      onInput={(event) => handleInputChange(event)}\r\n      style={{ border: 'none', borderRadius: '0.2rem', outline: 'none' }}\r\n    />\r\n  );\r\n}\r\n","import { useLight, useProperty } from './context.js';\r\nimport { Range } from './range-input.js';\r\nimport { Number } from './number-input.js';\r\nimport { ColorSelect } from './color-selector.js';\r\nimport '../styles/light-window.css';\r\n\r\n/**\r\n * The window that holds the selected light's information.\r\n * \r\n * @returns {object} JSX of the window pertaining to the lights.\r\n */\r\nexport function LightWindow() {\r\n  const { currentIntensity } = useProperty();\r\n  const { lightWindowInfo } = useLight();\r\n\r\n  const windowType = (type) => {\r\n    if (type === 'ambient' || type === 'AmbientLight') return 'Ambient Light';\r\n    else if (type === 'directional' || type === 'DirectionalLight') return 'Directional Light';\r\n    else if (type === 'point' || type === 'PointLight') return 'Point Light';\r\n    else return undefined;\r\n  }\r\n\r\n  // If the window info is of a type, then label the window as such\r\n  return (\r\n    <>\r\n      <div className='light-window-top'>\r\n        {windowType(lightWindowInfo.lightType) &&\r\n          <>\r\n            <label className='light-window-title'>{windowType(lightWindowInfo.lightType)}</label>\r\n            <div className='light-window-items-transformation'>\r\n              <div className='light-window-items-transformation label'>\r\n                <label>Transformation</label>\r\n              </div>\r\n              <Number />\r\n            </div>\r\n            <div className='light-window-items'>\r\n              <label>Color</label>\r\n              <ColorSelect />\r\n            </div>\r\n            <div className='light-window-items-intensity'>\r\n              <div className='light-window-items-header'>\r\n                <label>Intensity</label>\r\n                <div className='slider-value'>\r\n                  <span>{`${Math.floor(currentIntensity * 100)}%`}</span>\r\n                </div>\r\n              </div>\r\n              <Range />\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEye(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.01 20c-5.065 0-9.586-4.211-12.01-8.424 2.418-4.103 6.943-7.576 12.01-7.576 5.135 0 9.635 3.453 11.999 7.564-2.241 4.43-6.726 8.436-11.999 8.436zm-10.842-8.416c.843 1.331 5.018 7.416 10.842 7.416 6.305 0 10.112-6.103 10.851-7.405-.772-1.198-4.606-6.595-10.851-6.595-6.116 0-10.025 5.355-10.842 6.584zm10.832-4.584c2.76 0 5 2.24 5 5s-2.24 5-5 5-5-2.24-5-5 2.24-5 5-5zm0 1c2.208 0 4 1.792 4 4s-1.792 4-4 4-4-1.792-4-4 1.792-4 4-4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.0edee94c.svg\";\nexport { ForwardRef as ReactComponent };","import { ButtonGroup, Button } from 'react-bootstrap';\r\nimport { useProperty, useTarget } from './context.js';\r\n\r\n/**\r\n * ShadeSelect: Check which mesh is selected, then change that mesh's\r\n * shading mode (wireframe, flatShading, smooth shading)\r\n *\r\n * @returns {object} JSX containing the shading selection ButtonGroup\r\n */\r\nexport function ShadeSelect() {\r\n  const { setCurrentShade } = useProperty();\r\n  const { targetMesh } = useTarget();\r\n\r\n  //Handle's Wireframe button event\r\n  function handleWireframe() {\r\n    //Change the selected mesh material properties(flatShading,wireframe)\r\n    if (targetMesh) {\r\n      targetMesh.material.flatShading = false;\r\n      targetMesh.material.wireframe = true;\r\n    }\r\n    setCurrentShade('wireframe');\r\n  }\r\n  //Handle's flatShading button event\r\n  function handleFaceted() {\r\n    //Change the selected mesh material properties(flatShading,wireframe)\r\n    if (targetMesh) {\r\n      targetMesh.material.flatShading = true;\r\n      targetMesh.material.wireframe = false;\r\n      // needs to manually update the material to re-render change\r\n      targetMesh.material.needsUpdate = true;\r\n    }\r\n    setCurrentShade('flat');\r\n  }\r\n  //Handle's Smooth Shading button event\r\n  function handleSmooth() {\r\n    //Change the selected mesh material properties(flatShading,wireframe)\r\n    if (targetMesh) {\r\n      targetMesh.material.flatShading = false;\r\n      targetMesh.material.wireframe = false;\r\n      // needs to manually update the material to re-render change\r\n      targetMesh.material.needsUpdate = true;\r\n    }\r\n    setCurrentShade('smooth');\r\n  }\r\n  //ButtonGroup with the Three Shading Options as buttons\r\n  return (\r\n    <ButtonGroup>\r\n      <Button\r\n        className='btn-light scene-window-items'\r\n        onClick={() => handleWireframe()}\r\n      >\r\n        Wireframe\r\n      </Button>\r\n\r\n      <Button\r\n        className='btn-light scene-window-items'\r\n        onClick={() => handleFaceted()}\r\n      >\r\n        Flat\r\n      </Button>\r\n\r\n      <Button\r\n        className='btn-light scene-window-items'\r\n        onClick={() => handleSmooth()}\r\n      >\r\n        Smooth\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEyeCrossed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.137 15.147c-.71-.857-1.146-1.947-1.146-3.147 0-2.76 2.241-5 5-5 1.201 0 2.291.435 3.148 1.145l1.897-1.897c-1.441-.738-3.122-1.248-5.035-1.248-6.115 0-10.025 5.355-10.842 6.584.529.834 2.379 3.527 5.113 5.428l1.865-1.865zm6.294-6.294c-.673-.53-1.515-.853-2.44-.853-2.207 0-4 1.792-4 4 0 .923.324 1.765.854 2.439l5.586-5.586zm7.56-6.146l-19.292 19.293-.708-.707 3.548-3.548c-2.298-1.612-4.234-3.885-5.548-6.169 2.418-4.103 6.943-7.576 12.01-7.576 2.065 0 4.021.566 5.782 1.501l3.501-3.501.707.707zm-2.465 3.879l-.734.734c2.236 1.619 3.628 3.604 4.061 4.274-.739 1.303-4.546 7.406-10.852 7.406-1.425 0-2.749-.368-3.951-.938l-.748.748c1.475.742 3.057 1.19 4.699 1.19 5.274 0 9.758-4.006 11.999-8.436-1.087-1.891-2.63-3.637-4.474-4.978zm-3.535 5.414c0-.554-.113-1.082-.317-1.562l.734-.734c.361.69.583 1.464.583 2.296 0 2.759-2.24 5-5 5-.832 0-1.604-.223-2.295-.583l.734-.735c.48.204 1.007.318 1.561.318 2.208 0 4-1.792 4-4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeCrossed);\nexport default __webpack_public_path__ + \"static/media/eye-crossed.37b7f488.svg\";\nexport { ForwardRef as ReactComponent };","import { Button } from 'react-bootstrap';\r\nimport { ReactComponent as EyeIcon } from '../icons/eye.svg';\r\nimport { ReactComponent as EyeCrossedIcon } from '../icons/eye-crossed.svg';\r\nimport {useTarget, useScene } from './context.js';\r\nimport '../styles/toolbar.css';\r\n\r\n/**\r\n * Visibility: turns the selected mesh's Visibility on/off\r\n *\r\n * @returns {object} JSX containing the shading selection ButtonGroup\r\n */\r\nexport function Visibility() {\r\n  const { targetMesh } = useTarget();\r\n  const { isMeshVisible, setVisibility } = useScene();\r\n  //sets the meshs property, visible, to the opposite of its current boolean\r\n  const handleChange = (event) => {\r\n    if (targetMesh) {\r\n      targetMesh.visible = !targetMesh.visible;\r\n      if(isMeshVisible === true){\r\n        setVisibility(false);\r\n      }else{\r\n        setVisibility(true);\r\n      }\r\n    }\r\n  };\r\n  //Button that has a changing svg depending whether the mesh is visisble\r\n  return (\r\n    <Button\r\n      className='btn-light toolbar-items'\r\n      onClick={(event) => handleChange(event)}\r\n    >\r\n      {targetMesh ? (targetMesh.visible ? <EyeIcon/> : <EyeCrossedIcon/>) : null}\r\n    </Button>\r\n  );\r\n}\r\n","import { Number } from './number-input.js';\r\nimport { ColorSelect } from './color-selector.js';\r\nimport { ShadeSelect } from './shade-selector.js';\r\nimport { Visibility } from './visibility-toggle.js';\r\nimport '../styles/model-window.css';\r\n\r\n/**\r\n * The window that holds the selected model's information.\r\n * \r\n * @returns {object} JSX of the window pertaining to the model.\r\n */\r\nexport function ModelWindow() {\r\n  return (\r\n    <>\r\n      <div className='model-window-top'>\r\n        <label className='model-window-title'>Model</label>\r\n        <div className='model-window-items-transformation'>\r\n          <div className='model-window-items-transformation label'>\r\n            <label>Transformation</label>\r\n          </div>\r\n          <Number />\r\n        </div>\r\n        <div className='model-window-items'>\r\n          <label>Color</label>\r\n          <ColorSelect />\r\n        </div>\r\n        <div className='model-window-items'>\r\n          <label>Shader</label>\r\n          <ShadeSelect />\r\n        </div>\r\n        <div className='model-window-items'>\r\n          <label>Visibility</label>\r\n          <Visibility />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import '../styles/toggle.css';\r\n\r\n/**\r\n * Toggle: this is a simple checkbox toggle with transition animation\r\n *\r\n * @returns {object} JSX containing the toggle\r\n */\r\nexport function Toggle(props) {\r\n  return (\r\n    <label className='wrapper'>\r\n      <input\r\n        className='input'\r\n        type='checkbox'\r\n        onChange={props.onChange}\r\n        defaultChecked={props.defaultChecked}\r\n      />\r\n      <span className='slider' />\r\n    </label>\r\n  );\r\n}\r\n","import { Toggle } from './toggle.js';\r\nimport { useScene } from './context.js';\r\nimport '../styles/scene-window.css';\r\n\r\n/**\r\n * The window that holds the scene's information.\r\n * \r\n * @returns {object} JSX of the window pertaining to the scene.\r\n */\r\nexport function SceneWindow() {\r\n  const { isGridVisible, setGrid, isShadowsVisible, setShadows, isFogVisible, setFog} = useScene();\r\n\r\n  return (\r\n    <>\r\n      <div className='scene-window-top'>\r\n        <label className='scene-window-title'>Scene</label>\r\n        <div className='scene-window-items'>\r\n          <label>Grid</label>\r\n          <Toggle\r\n            onChange={(event) => setGrid(event.target.checked)}\r\n            defaultChecked={isGridVisible}\r\n          />\r\n        </div>\r\n        <div className='scene-window-items'>\r\n          <label>Shadows</label>\r\n          <Toggle\r\n            onChange={(event) => setShadows(event.target.checked)}\r\n            defaultChecked={isShadowsVisible}\r\n          />\r\n        </div>\r\n        <div className='scene-window-items'>\r\n          <label>Fog</label>\r\n          <Toggle\r\n            onChange={(event) => setFog(event.target.checked)}\r\n            defaultChecked={isFogVisible}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { NavDropdown } from 'react-bootstrap';\r\nimport { serialize, deserialize } from './serialize.js';\r\nimport * as context from './context.js';\r\nimport '../styles/navbar.css';\r\n\r\n/**\r\n * Show the drop-down list that contains all file operations\r\n * Save/export/import the file based on the selection\r\n *\r\n * @returns {object} JSX containing file operation\r\n */\r\n\r\nexport function NavFile() {\r\n  const { replaceModelData } = context.useModel();\r\n  const { replaceLightData } = context.useLight();\r\n  const { groupList, resetGroupList } = context.useGroup();\r\n  const { setTargetMesh, setHoveredMesh } = context.useTarget();\r\n\r\n  return (\r\n    <div className='navbar-items'>\r\n      <NavDropdown title='File' id='file-dropdown'>\r\n        <NavDropdown.Item\r\n          href='#action/2.0'\r\n          onClick={() => deserialize(`{\"models\": [], \"lights\": []}`)}\r\n        >\r\n          New\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/2.0'\r\n          accept='.ez3d'\r\n          onClick={() => save()}\r\n        >\r\n          Save\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item href='#action/2.0'>\r\n          <input type='file' id='file' onChange={(e) => load(e)} />\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href='#action/2.1'>Import</NavDropdown.Item>\r\n        <NavDropdown.Item href='#action/2.2'>Export</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </div>\r\n  );\r\n\r\n  function serialize() {\r\n    const serialized = {\r\n      models: [],\r\n      lights: [],\r\n    };\r\n\r\n    for (const thing of groupList) {\r\n      // check if this thing is a model or a light\r\n      // and put it in the correct category\r\n      if (thing.children[0]) {\r\n        console.log(thing);\r\n        serialized.lights.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          type: thing.children[0].type,\r\n        });\r\n      } else {\r\n        let color = thing.material.color;\r\n\r\n        if (typeof color != 'object') {\r\n          console.log(color);\r\n        }\r\n\r\n        serialized.models.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          rotation: thing.rotation.toVector3(),\r\n          scale: thing.scale,\r\n          color: { r: color.r, g: color.g, b: color.b },\r\n          geometryType: thing.geometry.type,\r\n          name: thing.name,\r\n        });\r\n      }\r\n    }\r\n\r\n    const json = JSON.stringify(serialized);\r\n\r\n    console.log(json);\r\n    return json;\r\n  }\r\n\r\n  function deserialize(serialized) {\r\n    const data = JSON.parse(serialized);\r\n    console.log(data);\r\n\r\n    setTargetMesh(null);\r\n    setHoveredMesh(null);\r\n    resetGroupList();\r\n    replaceModelData(data.models);\r\n    replaceLightData(data.lights);\r\n  }\r\n\r\n  function save() {\r\n    const data = serialize();\r\n    download('project.ez3d', data);\r\n  }\r\n\r\n  function load(event) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      deserialize(reader.result);\r\n    });\r\n    reader.readAsText(event.target.files[0]);\r\n  }\r\n}\r\n\r\n// from https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\r\nfunction download(filename, text) {\r\n  const pom = document.createElement('a');\r\n  pom.setAttribute(\r\n    'href',\r\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\r\n  );\r\n  pom.setAttribute('download', filename);\r\n\r\n  if (document.createEvent) {\r\n    const event = document.createEvent('MouseEvents');\r\n    event.initEvent('click', true, true);\r\n    pom.dispatchEvent(event);\r\n  } else {\r\n    pom.click();\r\n  }\r\n}\r\n","import { NavDropdown } from 'react-bootstrap';\r\nimport '../styles/navbar.css';\r\n\r\n/**\r\n * Show the drop-down list that contains all object operations\r\n * Undo operation/Redo operation/Delete mesh based on the selection\r\n *\r\n * @returns {object} JSX containing object operation\r\n */\r\n\r\nexport function NavEdit() {\r\n  return (\r\n    <div className='navbar-items'>\r\n      <NavDropdown title='Edit' id='edit-dropdown'>\r\n        <NavDropdown.Item\r\n          href='#action/3.0'\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <div style={{ margin: '0' }}>Undo</div>\r\n          <div style={{ margin: '0', color: '#4f4f4f4f' }}>Ctrl + Z</div>\r\n        </NavDropdown.Item>\r\n\r\n        <NavDropdown.Item\r\n          href='#action/3.1'\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <div style={{ margin: '0' }}>Redo</div>\r\n          <div style={{ margin: '0', color: '#4f4f4f4f' }}>Ctrl + Y</div>\r\n        </NavDropdown.Item>\r\n\r\n\r\n        <NavDropdown.Item\r\n          href='#action/3.3'\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <div style={{ margin: '0' }}>Delete</div>\r\n          <div style={{ margin: '0', color: '#4f4f4f4f' }}>Ctrl + X</div>\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </div>\r\n  );\r\n}\r\n","import { NavDropdown } from 'react-bootstrap';\r\nimport { useModel, useLight, useGroup } from './context.js';\r\nimport '../styles/navbar.css';\r\n\r\n/**\r\n * Show the drop-down list that contains all elements can be added to scene\r\n * Add the mesh/light based on the selection\r\n *\r\n * @returns {object} JSX containing mesh/light object\r\n */\r\n\r\nexport function NavAdd() {\r\n  const { setModelData } = useModel();\r\n  const { setLightData } = useLight();\r\n  const { setStatesList, groupList } = useGroup();\r\n\r\n  return (\r\n    <div className='navbar-items'>\r\n      <NavDropdown title='Add' id='add-dropdown'>\r\n        <NavDropdown.Item\r\n          href='#action/1.0'\r\n          onClick={() => generateNewShape('BoxGeometry', 'cornFlowerBlue')}\r\n        >\r\n          Cube\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.1'\r\n          onClick={() => generateNewShape('SphereGeometry', 'purple')}\r\n        >\r\n          Sphere\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('CylinderGeometry', 'yellow')}\r\n        >\r\n          Cylinder\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('ConeGeometry', 'crimson')}\r\n        >\r\n          Cone\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('TorusGeometry', 'orange')}\r\n        >\r\n          Torus\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('TetrahedronGeometry', 'seagreen')}\r\n        >\r\n          Tetrahedron\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('IcosahedronGeometry', 'hotpink')}\r\n        >\r\n          Icosahedron\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('OctahedronGeometry', 'tomato')}\r\n        >\r\n          Octahedron\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.2'\r\n          onClick={() => generateNewShape('DodecahedronGeometry', 'slateblue')}\r\n        >\r\n          Dodecahedron\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Divider className='nav-divider' />\r\n        <NavDropdown.Item\r\n          href='#action/1.3'\r\n          onClick={(event) => generateNewLight(event)}\r\n        >\r\n          Ambient Light\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.4'\r\n          onClick={(event) => generateNewLight(event)}\r\n        >\r\n          Directional Light\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item\r\n          href='#action/1.5'\r\n          onClick={(event) => generateNewLight(event)}\r\n        >\r\n          Point Light\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </div>\r\n  );\r\n\r\n    //function to save the state\r\n  function serialize() {\r\n    const serialized = {\r\n      models: [],\r\n      lights: [],\r\n    };\r\n\r\n    for (const thing of groupList) {\r\n      // check if this thing is a model or a light\r\n      // and put it in the correct category\r\n      if (thing.children[0]) {\r\n        console.log(thing);\r\n\r\n        serialized.lights.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          type: thing.children[0].type,\r\n        });\r\n      } else {\r\n        let color = thing.material.color;\r\n\r\n        if (typeof color != 'object') {\r\n          console.log(color);\r\n        }\r\n\r\n        serialized.models.push({\r\n          uuid: Math.random(),\r\n          position: thing.position,\r\n          rotation: thing.rotation.toVector3(),\r\n          scale: thing.scale,\r\n          color: { r: color.r, g: color.g, b: color.b },\r\n          geometryType: thing.geometry.type,\r\n          name: thing.name,\r\n        });\r\n      }\r\n    }\r\n\r\n    // saver = serialized;\r\n    setStatesList(JSON.stringify(serialized));\r\n  }\r\n\r\n  function generateNewShape(geometryType, color) {\r\n    serialize();\r\n    setModelData({\r\n      uuid: Math.random(),\r\n      color: color,\r\n      geometryType: geometryType,\r\n      //position: {x: 2, y: 3, z: 4},\r\n      //rotation: {x: 0, y: 0, z: Math.PI/8},\r\n      //scale: {x: 2, y: 1, z: 3},\r\n    });\r\n  }\r\n\r\n  // When generating a new light, push an object containing the properties of the new light to the light list\r\n  function generateNewLight(event) {\r\n    switch (event.target.innerHTML) {\r\n      case 'Ambient Light':\r\n        const newAmbient = {\r\n          position: [0, 0, 0],\r\n          type: 'AmbientLight',\r\n          uuid: Math.random(),\r\n        };\r\n        setLightData(newAmbient);\r\n        break;\r\n\r\n      case 'Directional Light':\r\n        const newDirectional = {\r\n          position: [0, -2.5, 0],\r\n          type: 'DirectionalLight',\r\n          uuid: Math.random(),\r\n        };\r\n        setLightData(newDirectional);\r\n        break;\r\n\r\n      case 'Point Light':\r\n        const newPoint = {\r\n          position: [0, 6.5, 0],\r\n          type: 'PointLight',\r\n          uuid: Math.random(),\r\n        };\r\n        setLightData(newPoint);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/UserManual.a0a499b4.pdf\";","import { NavDropdown } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\nimport '../styles/navbar.css';\r\nimport Pdf from '../Documents/UserManual.pdf';\r\n\r\n/**\r\n * Redirect user to user manual on clicking\r\n *\r\n * @returns {object} JSX containing PDF version of user manual\r\n */\r\n\r\nexport function NavHelp() {\r\n  return (\r\n    <div className='navbar-items'>\r\n      <NavDropdown title='Help' id='Help-dropdown'>\r\n        <NavDropdown.Item\r\n          href={Pdf}\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <div style={{ margin: '0' }}>User Manual</div>\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </div>\r\n  );\r\n}\r\n","import { ButtonGroup, Button } from 'react-bootstrap';\r\nimport { ReactComponent as TranslateIcon } from '../icons/translate.svg';\r\nimport { ReactComponent as RotateIcon } from '../icons/rotate.svg';\r\nimport { ReactComponent as ScaleIcon } from '../icons/scale.svg';\r\nimport { useProperty, useTarget } from './context.js';\r\nimport '../styles/toolbar.css';\r\n\r\n/**\r\n * Allows selection of the different modes to the transform controls.\r\n * \r\n * @returns {object} JSX of the toolbar UI.\r\n */\r\nexport function Toolbar() {\r\n  const icons = {\r\n    translate: <TranslateIcon />,\r\n    scale: <ScaleIcon />,\r\n    rotate: <RotateIcon />,\r\n  };\r\n  const select = ['translate', 'scale', 'rotate'];\r\n\r\n  const { currentTransformMode, setCurrentTransformMode } = useProperty();\r\n  const { targetMesh } = useTarget();\r\n\r\n  return (\r\n    <div className='toolbar'>\r\n      <ButtonGroup vertical>\r\n        {select.map((type) => (\r\n          <Button\r\n            className='btn-light toolbar-items'\r\n            key={`toolbar ${type}`}\r\n            active={targetMesh && currentTransformMode === type}\r\n            onClick={targetMesh ? () => setCurrentTransformMode(type) : null} // When clicked, change transform type\r\n          >\r\n            {icons[type]}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useMemo, useState } from 'react';\r\nimport { useFrame, useThree, createPortal } from '@react-three/fiber';\r\nimport { OrthographicCamera, useCamera } from '@react-three/drei';\r\nimport { Scene, Matrix4 } from 'three';\r\n\r\n/**\r\n * Reference: https://codesandbox.io/s/viewcube-py4db?file=/src/App.js\r\n * Reference: https://github.com/pmndrs/drei/blob/master/src/core/GizmoHelper.tsx\r\n * Provides snap-positioning of the camera on the x,y,z axis.\r\n * \r\n * @returns {object} JSX of the viewcube UI.\r\n */\r\nexport function Viewcube() {\r\n  const { gl, camera, size } = useThree();\r\n  const matrix = new Matrix4();\r\n  const virtualScene = useMemo(() => new Scene(), []);\r\n\r\n  const virtualCam = useRef();\r\n  const viewcubeRef = useRef();\r\n\r\n  const [hover, set] = useState(null);\r\n  const RENDER_PRIORITY = 2;\r\n\r\n  const setCameraPosition = (event) => {\r\n    switch (Math.floor(event.faceIndex / 2)) {\r\n      // Positive X\r\n      case 0:\r\n        camera.position.set(5, 0, 0);\r\n        break;\r\n\r\n      // Negative X\r\n      case 1:\r\n        camera.position.set(-5, 0, 0);\r\n        break;\r\n\r\n      // Positive Y\r\n      case 2:\r\n        camera.position.set(0, 5, 0);\r\n        break;\r\n\r\n      // Negative Y\r\n      case 3:\r\n        camera.position.set(0, -5, 0);\r\n        break;\r\n\r\n      // Positive Z\r\n      case 4:\r\n        camera.position.set(0, 0, 5);\r\n        break;\r\n\r\n      // Negative Z\r\n      case 5:\r\n        camera.position.set(0, 0, -5);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const setViewcubeColor = (hover, index) => {\r\n    let color = '';\r\n\r\n    switch (true) {\r\n      // X\r\n      case hover === index && (index === 0 || index === 1):\r\n        color = 'red';\r\n        break;\r\n\r\n      // Y\r\n      case hover === index && (index === 2 || index === 3):\r\n        color = 'lime';\r\n        break;\r\n\r\n      // Z\r\n      case hover === index && (index === 4 || index === 5):\r\n        color = 'blue';\r\n        break;\r\n\r\n      default:\r\n        color = 'lightgray';\r\n        break;\r\n    }\r\n\r\n    return color;\r\n  };\r\n\r\n  useFrame(() => {\r\n    if (virtualCam.current && viewcubeRef.current) {\r\n      matrix.copy(camera.matrix).invert();\r\n      viewcubeRef.current?.quaternion.setFromRotationMatrix(matrix);\r\n      gl.autoClear = false;\r\n      gl.clearDepth();\r\n      gl.render(virtualScene, virtualCam.current);\r\n    }\r\n  }, RENDER_PRIORITY);\r\n\r\n  return createPortal(\r\n    <>\r\n      <OrthographicCamera\r\n        ref={virtualCam}\r\n        makeDefault={false}\r\n        position={[0, 0, 100]}\r\n      />\r\n      <mesh\r\n        ref={viewcubeRef}\r\n        raycast={useCamera(virtualCam)}\r\n        position={[-(size.width / 2 - 80), -(size.height / 2 - 120), 0]}\r\n        onPointerOut={() => set(null)}\r\n        onPointerMove={(event) => set(Math.floor(event.faceIndex / 2))}\r\n        onClick={(event) => setCameraPosition(event)}\r\n      >\r\n        {[...Array(6)].map((_, index) => (\r\n          <meshLambertMaterial\r\n            attachArray='material'\r\n            key={index}\r\n            color={setViewcubeColor(hover, index)}\r\n          />\r\n        ))}\r\n        <boxGeometry args={[60, 60, 60]} />\r\n      </mesh>\r\n      <ambientLight intensity={0.5} />\r\n      <pointLight position={[10, 10, 10]} intensity={1} />\r\n    </>,\r\n    virtualScene\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useGroup, useModel, useLight, useTarget } from './context.js';\r\n\r\n/**\r\n * Group: this handles the object that holds all of the meshes and lights\r\n *\r\n * @returns {object} JSX containing group component\r\n */\r\nexport function Group({ children }) {\r\n  const { setGroupList } = useGroup();\r\n  const { modelData } = useModel();\r\n  const { lightData, setLightWindowToggle, setLightWindowType } = useLight();\r\n  const { transformRef, setHoveredMesh, setTargetMesh } = useTarget();\r\n\r\n  const groupRef = useRef();\r\n\r\n  //handlePointerMissed handles deselecting and opens a general scene window\r\n  const handlePointerMissed = () => {\r\n    setTargetMesh(null);\r\n    document.dispatchEvent(new KeyboardEvent('keydown',{'key':'d'}));\r\n    setLightWindowType(null);\r\n    setLightWindowToggle(false);\r\n  };\r\n\r\n  //When there is a change to the modelData or lightData it updates the groupRef\r\n  useEffect(() => {\r\n    if (groupRef.current) {\r\n      const group = groupRef.current;\r\n\r\n      console.log(\r\n        group.children && 'Current meshes in group are: ',\r\n        group.children\r\n      );\r\n      //adds new member to groupRef\r\n      group.children.forEach((mesh) => {\r\n        setGroupList(mesh);\r\n      });\r\n    }\r\n  }, [modelData, lightData, setGroupList]);\r\n\r\n  //returns group component\r\n  //handles pointer over, out, or miss on any member of the group\r\n  return (\r\n    <group\r\n      ref={groupRef}\r\n      onPointerOver={(event) => setHoveredMesh({ current: event.object })}\r\n      onPointerOut={() => setHoveredMesh(null)}\r\n      onPointerMissed={() => handlePointerMissed()}\r\n    >\r\n      {children}\r\n    </group>\r\n  );\r\n}\r\n","import { useScene } from './context.js';\r\n\r\n/**\r\n * The grid for the scene.\r\n * \r\n * @returns {object} JSX containing grid component.\r\n */\r\nexport function Grid() {\r\n  const { isGridVisible, isShadowsVisible } = useScene();\r\n\r\n  return (\r\n    <>\r\n      <mesh\r\n        position={[0, -0.51, 0]}\r\n        rotation-x={-Math.PI / 2}\r\n        receiveShadow={isShadowsVisible}\r\n      >\r\n        <planeBufferGeometry args={[100, 100]} attach='geometry' />\r\n        <shadowMaterial attach='material' transparent opacity={0.5} />\r\n      </mesh>\r\n      {isGridVisible && (\r\n        <gridHelper\r\n          position={[0, -0.51, 0]}\r\n          args={[100, 100, '#89898e', '#adadb4']}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useScene } from './context.js';\r\n\r\n/**\r\n * Gets state of fog toggle from scene\r\n * @returns {object} JSX fog if the toggle is on\r\n */\r\nexport function Fog() {\r\n  const { isFogVisible } = useScene();\r\n\r\n  return (\r\n    <>\r\n      {isFogVisible && (\r\n        <fog\r\n          attach='fog'\r\n          args={['#bbbbbe', 10, 40]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useGroup, useLight, useModel, useTarget } from './context.js';\r\n\r\n/**\r\n * The hotkeys (not including transform controls hotkeys).\r\n * \r\n * @param {object} children\r\n * @returns {object} JSX containing hotkeys\r\n */\r\nexport function HotKeys({ children }) {\r\n  const { setTargetMesh, targetMesh, setHoveredMesh } = useTarget();\r\n  const {\r\n    delGroupList,\r\n    groupList,\r\n    groupListPrev,\r\n    resetGroupList,\r\n    setStatesList,\r\n    popStatesList,\r\n    statesList,\r\n    redoList,\r\n    popRedoList,\r\n    setRedoList,\r\n    resetUndoLists,\r\n  } = useGroup();\r\n\r\n  const {\r\n    modelData,\r\n    deleteModelData,\r\n    setIsModelWindowOpen,\r\n    modelDataPrev,\r\n    replaceModelData,\r\n  } = useModel();\r\n\r\n  const {\r\n    deleteLightData,\r\n    lightData,\r\n    setLightWindowToggle,\r\n    setLightWindowType,\r\n    lightDataPrev,\r\n  } = useLight();\r\n\r\n  useEffect(() => {\r\n    const serialized = {\r\n      models: [],\r\n      lights: [],\r\n    };\r\n\r\n    //function to save the state for undo/redo\r\n    function serialize() {\r\n      for (const thing of groupList) {\r\n        // check if this thing is a model or a light\r\n        // and put it in the correct category\r\n        if (thing.children[0]) {\r\n          console.log(thing);\r\n          serialized.lights.push({\r\n            uuid: Math.random(),\r\n            position: thing.position,\r\n            type: thing.children[0].type,\r\n          });\r\n        } else {\r\n          let color = thing.material.color;\r\n\r\n          if (typeof color != 'object') {\r\n            console.log(color);\r\n          }\r\n\r\n          serialized.models.push({\r\n            uuid: Math.random(),\r\n            position: thing.position,\r\n            rotation: thing.rotation.toVector3(),\r\n            scale: thing.scale,\r\n            color: { r: color.r, g: color.g, b: color.b },\r\n            geometryType: thing.geometry.type,\r\n            name: thing.name,\r\n            });\r\n        }\r\n      }\r\n\r\n      // saver = serialized;\r\n      setStatesList(JSON.stringify(serialized));\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n      switch (event.key) {\r\n        // For debugging purposes, print out the state data\r\n        case 'p':\r\n          console.log('Currently Selected Mesh:', targetMesh);\r\n          console.log('Grouplist:', groupList);\r\n          console.log('ModelData:', modelData);\r\n          console.log('LightData:', lightData);\r\n          console.log('GrouplistPrev:', groupListPrev);\r\n          console.log('ModelDataPrev:', modelDataPrev);\r\n          console.log('LightDataPrev:', lightDataPrev);\r\n          break;\r\n\r\n        // Deselect target mesh\r\n        case 'Escape':\r\n          setTargetMesh(null); // Remove target mesh\r\n          setLightWindowType(null); // Clear light window type\r\n          setLightWindowToggle(false); // Close light window\r\n          setIsModelWindowOpen(false); // Close model window\r\n          break;\r\n\r\n        // shift r to reset the undo history\r\n        case 'c':\r\n            if (event.ctrlKey){\r\n                resetUndoLists();\r\n                console.log('RESET');\r\n            }\r\n          break;\r\n\r\n        // ctrl Y to redo your undos\r\n        // before redo executes, first save the state \r\n        case 'y':\r\n            if (event.ctrlKey && redoList[redoList.length - 1] != null) {\r\n              for (const thing of groupList) {\r\n                // check if this thing is a model or a light\r\n                // and put it in the correct category\r\n                if (thing.children[0]) {\r\n                  console.log(thing);\r\n                  serialized.lights.push({\r\n                    uuid: Math.random(),\r\n                    position: thing.position,\r\n                    type: thing.children[0].type,\r\n                  });\r\n                } else {\r\n                  let color = thing.material.color;\r\n\r\n                  if (typeof color != 'object') {\r\n                    console.log(color);\r\n                  }\r\n\r\n                  serialized.models.push({\r\n                    uuid: Math.random(),\r\n                    position: thing.position,\r\n                    rotation: thing.rotation.toVector3(),\r\n                    scale: thing.scale,\r\n                    color: { r: color.r, g: color.g, b: color.b },\r\n                    geometryType: thing.geometry.type,\r\n                    name: thing.name,\r\n                  });\r\n                }\r\n              }\r\n\r\n              // saver = serialized;\r\n              setStatesList(JSON.stringify(serialized));\r\n\r\n              const data = JSON.parse(redoList[redoList.length - 1]);\r\n\r\n              popRedoList();\r\n              setTargetMesh(null);\r\n              setHoveredMesh(null);\r\n              setLightWindowToggle(false); // Close light window\r\n              setIsModelWindowOpen(false); // Close model window\r\n              resetGroupList();\r\n              replaceModelData(data.models); // replaceLightData(data.lights)\r\n            }\r\n            break;\r\n        // ctrl z to undo your changes\r\n        // before undo executes, first save the state in the redo list\r\n        case 'z':\r\n          \r\n              // if ctrl is pressed, continue undo\r\n            if (event.ctrlKey) {\r\n              if (statesList[statesList.length - 1] != null) {\r\n                for (const thing of groupList) {\r\n                  // check if this thing is a model or a light\r\n                  // and put it in the correct category\r\n                  if (thing.children[0]) {\r\n                    console.log(thing);\r\n                    serialized.lights.push({\r\n                      uuid: Math.random(),\r\n                      position: thing.position,\r\n                      type: thing.children[0].type,\r\n                    });\r\n                  } else {\r\n                    let color = thing.material.color;\r\n\r\n                    if (typeof color != 'object') {\r\n                      console.log(color);\r\n                    }\r\n\r\n                    serialized.models.push({\r\n                    uuid: Math.random(),\r\n                    position: thing.position,\r\n                    rotation: thing.rotation.toVector3(),\r\n                    scale: thing.scale,\r\n                    color: { r: color.r, g: color.g, b: color.b },\r\n                    geometryType: thing.geometry.type,\r\n                    name: thing.name,\r\n                  });\r\n                  }\r\n                }\r\n\r\n                setRedoList(JSON.stringify(serialized));\r\n\r\n                const data = JSON.parse(statesList[statesList.length - 1]);\r\n                popStatesList();\r\n                setTargetMesh(null);\r\n                setHoveredMesh(null);\r\n                setLightWindowToggle(false); // Close light window\r\n                setIsModelWindowOpen(false); // Close model window\r\n                resetGroupList();\r\n                replaceModelData(data.models);\r\n                // replaceLightData(data.lights)\r\n              }\r\n            }\r\n          \r\n          break;\r\n\r\n        case 's':\r\n            \r\n          serialize();\r\n          break;\r\n\r\n        // ctrl x deletes selected mesh\r\n        case 'x':\r\n          if (targetMesh != null && event.ctrlKey) {\r\n            setHoveredMesh(null); // Remove hovered mesh to avoid bugs\r\n            setTargetMesh(null); // Remove target mesh\r\n            setLightWindowToggle(false); // Close light window\r\n            setIsModelWindowOpen(false); // Close model window\r\n\r\n            // save the modeldata\r\n            serialize();\r\n\r\n            const beforeLength = modelData.length; // Get modelData length\r\n            deleteModelData(targetMesh); // Delete targeted mesh in modelData\r\n\r\n            if (beforeLength === modelData.length) {\r\n              // If nothing happened to modelList, a light must be deleted\r\n              let lightIndex = -1; // Start at -1 to account for index starting at 0\r\n              let totalLightsMinusOne = -1;\r\n\r\n              groupList.forEach((entry) => {\r\n                if (!(entry.uuid < 1)) {\r\n                  // Mesh UUID is a decimal less than 1, Light UUID is not a decimal\r\n                  totalLightsMinusOne++; // If light was found, increment the total amount of lights found\r\n\r\n                  if (entry === targetMesh) {\r\n                    // If groupList element is the targetMesh, save its index\r\n                    lightIndex = totalLightsMinusOne;\r\n                  }\r\n                }\r\n              });\r\n\r\n              // Perform the delete function on the lightData list of lights - indexes of lightData list is reversed compared to groupList\r\n              deleteLightData(totalLightsMinusOne - lightIndex);\r\n            }\r\n\r\n            // Delete the targeted mesh from the groupList\r\n            delGroupList(targetMesh);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return <>{children}</>;\r\n}\r\n","import React from 'react';\r\nimport Pane from 'react-split-pane/lib/Pane';\r\nimport SplitPane from 'react-split-pane/lib/SplitPane';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { EffectComposer, Outline } from '@react-three/postprocessing';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport { Controls } from './components/controls.js';\r\nimport { LightRenderer } from './components/light-renderer.js';\r\nimport { ModelRenderer } from './components/model-renderer.js';\r\nimport { ObjectList } from './components/object-list.js';\r\nimport { LightWindow } from './components/light-window.js';\r\nimport { ModelWindow } from './components/model-window.js';\r\nimport { SceneWindow } from './components/scene-window.js';\r\nimport { NavFile } from './components/nav-file.js';\r\nimport { NavEdit } from './components/nav-edit.js';\r\nimport { NavAdd } from './components/nav-add.js';\r\nimport { NavHelp } from './components/nav-help.js';\r\nimport { Toolbar } from './components/toolbar.js';\r\nimport { Viewcube } from './components/viewcube.js';\r\nimport { Group } from './components/group.js';\r\nimport { Grid } from './components/grid.js';\r\nimport { Fog } from './components/fog.js';\r\nimport { HotKeys } from './components/hotkeys.js';\r\nimport { useLight, useModel, useTarget } from './components/context.js';\r\n\r\nimport './App.css';\r\nimport './styles/navbar.css';\r\n\r\n/**\r\n * App: This is the overall structure of our components\r\n *\r\n * @returns {object} JSX containing the combination of components\r\n */\r\nexport function App() {\r\n  const { modelData, isModelWindowOpen } = useModel();\r\n  const { lightData, lightWindowInfo } = useLight();\r\n  const { hoveredMesh } = useTarget();\r\n\r\n  // Reference: https://codesandbox.io/s/basic-demo-forked-v8ji5?file=/src/App.js:1036-1079\r\n  // Selection is done on the outermost mesh - not the innermost mesh\r\n  const intersectionsFilter = (intersections) => {\r\n    return intersections?.length ? [intersections[0]] : intersections;\r\n  };\r\n  //divides these components by using SplitPane\r\n  return (\r\n    <>\r\n      <HotKeys>\r\n        <Navbar className='navbar'>\r\n          <Navbar.Brand className='brand' href='/'>\r\n            EZ-3D\r\n          </Navbar.Brand>\r\n          <Nav className='me-auto'>\r\n            <NavFile />\r\n            <NavEdit />\r\n            <NavAdd />\r\n            <NavHelp />\r\n          </Nav>\r\n        </Navbar>\r\n\r\n        <SplitPane className='splitpane' split='vertical'>\r\n          <Pane className='pane-canvas'>\r\n            <Toolbar />\r\n\r\n            <Canvas\r\n              camera={{ position: [3, 3, 3] }}\r\n              raycaster={{ filter: intersectionsFilter }}\r\n              shadows\r\n            >\r\n              <color attach='background' args={['#bbbbbe']} />\r\n              <Fog />\r\n              <ambientLight intensity={0.5} />\r\n              <pointLight position={[0, 5, 10]} intensity={0.5} />\r\n              <pointLight position={[0, -5, -10]} intensity={0.5} />\r\n\r\n              <Grid />\r\n              <Controls />\r\n              <Viewcube />\r\n\r\n              <Group>\r\n                {modelData.map((data) => (\r\n                  <ModelRenderer key={data.uuid} {...data} />\r\n                ))}\r\n\r\n                {lightData.map((data) => (\r\n                  <LightRenderer key={data.uuid} {...data} />\r\n                ))}\r\n              </Group>\r\n\r\n              <EffectComposer multisampling={8} autoClear={false}>\r\n                <Outline\r\n                  blur\r\n                  selection={hoveredMesh ? [hoveredMesh] : undefined}\r\n                  visibleEdgeColor='white'\r\n                  edgeStrength={100}\r\n                  width={1000}\r\n                />\r\n              </EffectComposer>\r\n            </Canvas>\r\n          </Pane>\r\n\r\n          <Pane\r\n            className='pane-outliner'\r\n            initialSize='300px'\r\n            minSize='300px'\r\n            maxSize='300px'\r\n          >\r\n            <SplitPane split='horizontal'>\r\n              <Pane\r\n                className='object-list-pane'\r\n                initialSize='350px'\r\n                minSize='250px'\r\n              >\r\n                <ObjectList />\r\n              </Pane>\r\n\r\n              <Pane className='scene-window-pane'>\r\n                {lightWindowInfo.isWindowOpen ? (\r\n                  <LightWindow />\r\n                ) : isModelWindowOpen ? (\r\n                  <ModelWindow />\r\n                ) : (\r\n                  <SceneWindow />\r\n                )}\r\n              </Pane>\r\n            </SplitPane>\r\n          </Pane>\r\n        </SplitPane>\r\n      </HotKeys>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App.js';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}